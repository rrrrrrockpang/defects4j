diff --git a/src/main/java/org/apache/commons/configuration/DefaultConfigurationBuilder.java b/src/main/java/org/apache/commons/configuration/DefaultConfigurationBuilder.java
index 94d96bb5..f8452e72 100644
--- a/src/main/java/org/apache/commons/configuration/DefaultConfigurationBuilder.java
+++ b/src/main/java/org/apache/commons/configuration/DefaultConfigurationBuilder.java
@@ -745,8 +745,8 @@ public class DefaultConfigurationBuilder extends XMLConfiguration implements
      */
     protected void registerConfiguredProviders() throws ConfigurationException
     {
-        List<SubnodeConfiguration> nodes = configurationsAt(KEY_CONFIGURATION_PROVIDERS);
-        for (SubnodeConfiguration config : nodes)
+        List<HierarchicalConfiguration> nodes = configurationsAt(KEY_CONFIGURATION_PROVIDERS);
+        for (HierarchicalConfiguration config : nodes)
         {
             XMLBeanDeclaration decl = new XMLBeanDeclaration(config);
             String key = config.getString(KEY_PROVIDER_KEY);
@@ -762,8 +762,8 @@ public class DefaultConfigurationBuilder extends XMLConfiguration implements
      */
     protected void registerConfiguredLookups() throws ConfigurationException
     {
-        List<SubnodeConfiguration> nodes = configurationsAt(KEY_CONFIGURATION_LOOKUPS);
-        for (SubnodeConfiguration config : nodes)
+        List<HierarchicalConfiguration> nodes = configurationsAt(KEY_CONFIGURATION_LOOKUPS);
+        for (HierarchicalConfiguration config : nodes)
         {
             XMLBeanDeclaration decl = new XMLBeanDeclaration(config);
             String key = config.getString(KEY_LOOKUP_KEY);
diff --git a/src/main/java/org/apache/commons/configuration/DynamicCombinedConfiguration.java b/src/main/java/org/apache/commons/configuration/DynamicCombinedConfiguration.java
index 39570c0f..86e16819 100644
--- a/src/main/java/org/apache/commons/configuration/DynamicCombinedConfiguration.java
+++ b/src/main/java/org/apache/commons/configuration/DynamicCombinedConfiguration.java
@@ -610,7 +610,7 @@ public class DynamicCombinedConfiguration extends CombinedConfiguration
     }
 
     @Override
-    public List<SubnodeConfiguration> configurationsAt(String key)
+    public List<HierarchicalConfiguration> configurationsAt(String key)
     {
         return this.getCurrentConfig().configurationsAt(key);
     }
diff --git a/src/main/java/org/apache/commons/configuration/HierarchicalConfiguration.java b/src/main/java/org/apache/commons/configuration/HierarchicalConfiguration.java
index 4df63b47..037dea66 100644
--- a/src/main/java/org/apache/commons/configuration/HierarchicalConfiguration.java
+++ b/src/main/java/org/apache/commons/configuration/HierarchicalConfiguration.java
@@ -585,10 +585,10 @@ public class HierarchicalConfiguration extends AbstractConfiguration implements
      * configuration represents one of the nodes selected by the passed in key
      * @since 1.3
      */
-    public List<SubnodeConfiguration> configurationsAt(String key)
+    public List<HierarchicalConfiguration> configurationsAt(String key)
     {
         List<ConfigurationNode> nodes = fetchNodeList(key);
-        List<SubnodeConfiguration> configs = new ArrayList<SubnodeConfiguration>(nodes.size());
+        List<HierarchicalConfiguration> configs = new ArrayList<HierarchicalConfiguration>(nodes.size());
         for (ConfigurationNode node : nodes)
         {
             configs.add(createSubnodeConfiguration(node));
diff --git a/src/main/java/org/apache/commons/configuration/MultiFileHierarchicalConfiguration.java b/src/main/java/org/apache/commons/configuration/MultiFileHierarchicalConfiguration.java
index a43038b4..d09b28d6 100644
--- a/src/main/java/org/apache/commons/configuration/MultiFileHierarchicalConfiguration.java
+++ b/src/main/java/org/apache/commons/configuration/MultiFileHierarchicalConfiguration.java
@@ -511,7 +511,7 @@ public class MultiFileHierarchicalConfiguration extends AbstractHierarchicalFile
     }
 
     @Override
-    public List<SubnodeConfiguration> configurationsAt(String key)
+    public List<HierarchicalConfiguration> configurationsAt(String key)
     {
         return this.getConfiguration().configurationsAt(key);
     }
diff --git a/src/main/java/org/apache/commons/configuration/PatternSubtreeConfigurationWrapper.java b/src/main/java/org/apache/commons/configuration/PatternSubtreeConfigurationWrapper.java
index 1f77ab69..19006e6e 100644
--- a/src/main/java/org/apache/commons/configuration/PatternSubtreeConfigurationWrapper.java
+++ b/src/main/java/org/apache/commons/configuration/PatternSubtreeConfigurationWrapper.java
@@ -388,7 +388,7 @@ public class PatternSubtreeConfigurationWrapper extends AbstractHierarchicalFile
     }
 
     @Override
-    public List<SubnodeConfiguration> configurationsAt(String key)
+    public List<HierarchicalConfiguration> configurationsAt(String key)
     {
         return config.configurationsAt(makePath(key));
     }
diff --git a/src/main/java/org/apache/commons/configuration/beanutils/XMLBeanDeclaration.java b/src/main/java/org/apache/commons/configuration/beanutils/XMLBeanDeclaration.java
index e56075f9..66eb867e 100644
--- a/src/main/java/org/apache/commons/configuration/beanutils/XMLBeanDeclaration.java
+++ b/src/main/java/org/apache/commons/configuration/beanutils/XMLBeanDeclaration.java
@@ -394,17 +394,17 @@ public class XMLBeanDeclaration implements BeanDeclaration
      */
     protected BeanDeclaration createBeanDeclaration(ConfigurationNode node)
     {
-        List<SubnodeConfiguration> list = getConfiguration().configurationsAt(node.getName());
+        List<HierarchicalConfiguration> list = getConfiguration().configurationsAt(node.getName());
         if (list.size() == 1)
         {
-            return new XMLBeanDeclaration(list.get(0), node);
+            return new XMLBeanDeclaration((SubnodeConfiguration) list.get(0), node);
         }
         else
         {
-            Iterator<SubnodeConfiguration> iter = list.iterator();
+            Iterator<HierarchicalConfiguration> iter = list.iterator();
             while (iter.hasNext())
             {
-                SubnodeConfiguration config = iter.next();
+                SubnodeConfiguration config = (SubnodeConfiguration) iter.next();
                 if (config.getRootNode().equals(node))
                 {
                     return new XMLBeanDeclaration(config, node);
