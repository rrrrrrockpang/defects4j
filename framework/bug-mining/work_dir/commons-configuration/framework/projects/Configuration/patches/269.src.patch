diff --git a/src/main/java/org/apache/commons/configuration2/builder/combined/ReloadingCombinedConfigurationBuilder.java b/src/main/java/org/apache/commons/configuration2/builder/combined/ReloadingCombinedConfigurationBuilder.java
index a286bb44..cd2b58b1 100644
--- a/src/main/java/org/apache/commons/configuration2/builder/combined/ReloadingCombinedConfigurationBuilder.java
+++ b/src/main/java/org/apache/commons/configuration2/builder/combined/ReloadingCombinedConfigurationBuilder.java
@@ -122,21 +122,6 @@ public class ReloadingCombinedConfigurationBuilder extends
         return reloadingController;
     }
 
-    /**
-     * {@inheritDoc} This implementation makes sure that the reloading state of
-     * the managed reloading controller is reset. Note that this has to be done
-     * here and not in {@link #initResultInstance(CombinedConfiguration)}
-     * because it must be outside of a synchronized block; otherwise, a
-     * dead-lock situation can occur.
-     */
-    @Override
-    public CombinedConfiguration getConfiguration() throws ConfigurationException
-    {
-        CombinedConfiguration result = super.getConfiguration();
-        reloadingController.resetReloadingState();
-        return result;
-    }
-
     /**
      * {@inheritDoc} This implementation creates a builder for XML
      * configurations with reloading support.
@@ -160,10 +145,7 @@ public class ReloadingCombinedConfigurationBuilder extends
             throws ConfigurationException
     {
         super.initResultInstance(result);
-        if (reloadingController == null)
-        {
-            reloadingController = createReloadingController();
-        }
+        reloadingController = createReloadingController();
     }
 
     /**
diff --git a/src/main/java/org/apache/commons/configuration2/reloading/CombinedReloadingController.java b/src/main/java/org/apache/commons/configuration2/reloading/CombinedReloadingController.java
index 23f4c357..9ea0831e 100644
--- a/src/main/java/org/apache/commons/configuration2/reloading/CombinedReloadingController.java
+++ b/src/main/java/org/apache/commons/configuration2/reloading/CombinedReloadingController.java
@@ -172,23 +172,20 @@ public class CombinedReloadingController extends ReloadingController
 
         /**
          * {@inheritDoc} This implementation delegates to the managed
-         * controllers. For all of them the {@code checkForReloading()}
-         * method is called, giving them the chance to trigger a reload if
-         * necessary. If one of these calls returns <b>true</b>, the result of
-         * this method is <b>true</b>, otherwise <b>false</b>.
+         * controllers. If one of them returns <b>true</b> from its check
+         * method, iteration is aborted, and result is <b>true</b>.
          */
         @Override
         public boolean isReloadingRequired()
         {
-            boolean result = false;
             for (ReloadingController rc : owner.getSubControllers())
             {
                 if (rc.checkForReloading(null))
                 {
-                    result = true;
+                    return true;
                 }
             }
-            return result;
+            return false;
         }
 
         /**
