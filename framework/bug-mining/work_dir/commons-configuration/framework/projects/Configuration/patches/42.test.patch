diff --git a/src/test/org/apache/commons/configuration/ConfigurationAssert.java b/src/test/org/apache/commons/configuration/ConfigurationAssert.java
deleted file mode 100644
index 1f25f63a..00000000
--- a/src/test/org/apache/commons/configuration/ConfigurationAssert.java
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.commons.configuration;
-
-import java.util.Iterator;
-
-import junit.framework.Assert;
-
-/**
- * Assertions on configurations for the unit tests.
- * 
- * @author Emmanuel Bourg
- * @version $Revision$, $Date$
- */
-public class ConfigurationAssert
-{
-    public static void assertEquals(Configuration expected, Configuration actual)
-    {
-        // check that the actual configuration contains all the properties of the expected configuration
-        for (Iterator it = expected.getKeys(); it.hasNext();)
-        {
-            String key = (String) it.next();
-            Assert.assertTrue("The actual configuration doesn't contain the expected key '" + key + "'", actual.containsKey(key));
-            Assert.assertEquals("Value of the '" + key + "' property", expected.getProperty(key), actual.getProperty(key));
-        }
-
-        // check that the actual configuration has no extra properties
-        for (Iterator it = actual.getKeys(); it.hasNext();)
-        {
-            String key = (String) it.next();
-            Assert.assertTrue("The actual configuration contains an extra key '" + key + "'", expected.containsKey(key));
-        }
-    }
-}
diff --git a/src/test/org/apache/commons/configuration/TestPropertiesConfiguration.java b/src/test/org/apache/commons/configuration/TestPropertiesConfiguration.java
index f19c51cc..c17dd2ce 100644
--- a/src/test/org/apache/commons/configuration/TestPropertiesConfiguration.java
+++ b/src/test/org/apache/commons/configuration/TestPropertiesConfiguration.java
@@ -160,7 +160,12 @@ public class TestPropertiesConfiguration extends TestCase
 
         // read the configuration and compare the properties
         PropertiesConfiguration checkConfig = new PropertiesConfiguration(filename);
-        ConfigurationAssert.assertEquals(conf, checkConfig);
+        for (Iterator i = conf.getKeys(); i.hasNext();)
+        {
+            String key = (String) i.next();
+            assertTrue("The saved configuration doesn't contain the key '" + key + "'", checkConfig.containsKey(key));
+            assertEquals("Value of the '" + key + "' property", conf.getProperty(key), checkConfig.getProperty(key));
+        }
 
         // Save it again, verifing a save with a filename works.
         checkConfig.save();
@@ -263,33 +268,15 @@ public class TestPropertiesConfiguration extends TestCase
 
         // read the configuration and compare the properties
         PropertiesConfiguration checkConfig = new PropertiesConfiguration(filename);
-        ConfigurationAssert.assertEquals(pc, checkConfig);
-
-        // Save it again, verifing a save with a filename works.
-        checkConfig.save();
-    }
-
-    /**
-     * Tests saving a configuration when delimiter parsing is disabled.
-     */
-    public void testSaveWithDelimiterParsingDisabled() throws ConfigurationException
-    {
-        conf.clear();
-        conf.setDelimiterParsingDisabled(true);
-        conf.addProperty("test.list", "a,b,c");
-        conf.addProperty("test.dirs", "C:\\Temp\\,D:\\Data\\");
-        // remove the file previously saved if necessary
-        if (testSavePropertiesFile.exists())
+        for (Iterator i = pc.getKeys(); i.hasNext();)
         {
-            assertTrue(testSavePropertiesFile.delete());
+            String key = (String) i.next();
+            assertTrue("The saved configuration doesn't contain the key '" + key + "'", checkConfig.containsKey(key));
+            assertEquals("Value of the '" + key + "' property", pc.getProperty(key), checkConfig.getProperty(key));
         }
-        conf.save(testSavePropertiesFile);
 
-        PropertiesConfiguration checkConfig = new PropertiesConfiguration();
-        checkConfig.setDelimiterParsingDisabled(true);
-        checkConfig.setFile(testSavePropertiesFile);
-        checkConfig.load();
-        ConfigurationAssert.assertEquals(conf, checkConfig);
+        // Save it again, verifing a save with a filename works.
+        checkConfig.save();
     }
 
     public void testSaveMissingFilename()
