diff --git a/src/java/org/apache/commons/configuration/INIConfiguration.java b/src/java/org/apache/commons/configuration/INIConfiguration.java
index d6c1179e..1cf378c0 100644
--- a/src/java/org/apache/commons/configuration/INIConfiguration.java
+++ b/src/java/org/apache/commons/configuration/INIConfiguration.java
@@ -24,7 +24,6 @@ import java.io.PrintWriter;
 import java.io.Reader;
 import java.io.Writer;
 import java.net.URL;
-import java.util.Collection;
 import java.util.Iterator;
 import java.util.Set;
 import java.util.TreeSet;
@@ -58,7 +57,7 @@ import org.apache.commons.lang.StringUtils;
  * </code>
  *
  * <p>
- * The format of ini files is fairly straight forward and is composed of three
+ * The format of ini files is fairly straight forward and is comosed of three
  * components:<br>
  * <ul>
  * <li><b>Sections:</b> Ini files are split into sections, each section
@@ -224,44 +223,32 @@ public class INIConfiguration extends AbstractFileConfiguration
      */
     public void save(Writer writer) throws ConfigurationException
     {
-        PrintWriter out = new PrintWriter(writer);
+        PrintWriter pw = new PrintWriter(writer);
         Iterator it = getSections().iterator();
         while (it.hasNext())
         {
             String section = (String) it.next();
-            out.print("[");
-            out.print(section);
-            out.print("]");
-            out.println();
+            pw.print("[");
+            pw.print(section);
+            pw.print("]");
+            pw.println();
 
-            Configuration subset = subset(section);
-            Iterator keys = subset.getKeys();
+            Configuration values = subset(section);
+            Iterator keys = values.getKeys();
             while (keys.hasNext())
             {
                 String key = (String) keys.next();
-                Object value = subset.getProperty(key);
-                if (value instanceof Collection) {
-                    Iterator values = ((Collection) value).iterator();
-                    while (values.hasNext())
-                    {
-                        value = (Object) values.next();
-                        out.print(key);
-                        out.print(" = ");
-                        out.print(formatValue(value.toString()));
-                        out.println();
-                    }
-                } else {
-                    out.print(key);
-                    out.print(" = ");
-                    out.print(formatValue(value.toString()));
-                    out.println();
-                }
+                String value = values.getString(key);
+                pw.print(key);
+                pw.print(" = ");
+                pw.print(formatValue(value));
+                pw.println();
             }
 
-            out.println();
+            pw.println();
         }
 
-        out.flush();
+        pw.flush();
     }
 
     /**
