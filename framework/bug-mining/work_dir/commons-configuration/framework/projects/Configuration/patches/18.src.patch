diff --git a/src/java/org/apache/commons/configuration/AbstractFileConfiguration.java b/src/java/org/apache/commons/configuration/AbstractFileConfiguration.java
index 45cd7ba1..862a326d 100644
--- a/src/java/org/apache/commons/configuration/AbstractFileConfiguration.java
+++ b/src/java/org/apache/commons/configuration/AbstractFileConfiguration.java
@@ -34,8 +34,6 @@ import java.util.Iterator;
 import org.apache.commons.configuration.reloading.InvariantReloadingStrategy;
 import org.apache.commons.configuration.reloading.ReloadingStrategy;
 import org.apache.commons.lang.StringUtils;
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
 
 /**
  * <p>Partial implementation of the <code>FileConfiguration</code> interface.
@@ -95,9 +93,6 @@ public abstract class AbstractFileConfiguration extends BaseConfiguration implem
     /** Holds a reference to the reloading strategy.*/
     protected ReloadingStrategy strategy;
 
-    /** The logger.*/
-    private Log log = LogFactory.getLog(getClass());
-
     /** A lock object for protecting reload operations.*/
     private Object reloadLock = new Object();
 
@@ -304,7 +299,7 @@ public abstract class AbstractFileConfiguration extends BaseConfiguration implem
             }
             catch (IOException e)
             {
-                log.warn("Could not close input stream", e);
+                e.printStackTrace();
             }
         }
     }
@@ -468,7 +463,7 @@ public abstract class AbstractFileConfiguration extends BaseConfiguration implem
             }
             catch (IOException e)
             {
-                log.warn("Could not close output stream", e);
+                e.printStackTrace();
             }
         }
     }
@@ -775,10 +770,6 @@ public abstract class AbstractFileConfiguration extends BaseConfiguration implem
 
                     if (strategy.reloadingRequired())
                     {
-                        if (log.isInfoEnabled())
-                        {
-                            log.info("Reloading configuration. URL is " + getURL());
-                        }
                         fireEvent(EVENT_RELOAD, null, getURL(), true);
                         setDetailEvents(false);
                         try
@@ -798,7 +789,7 @@ public abstract class AbstractFileConfiguration extends BaseConfiguration implem
                 }
                 catch (Exception e)
                 {
-                    log.warn("Error when reloading configuration", e);
+                    e.printStackTrace();
                     // todo rollback the changes if the file can't be reloaded
                 }
                 finally
diff --git a/src/java/org/apache/commons/configuration/ConfigurationUtils.java b/src/java/org/apache/commons/configuration/ConfigurationUtils.java
index e15ffe0f..2d294e43 100644
--- a/src/java/org/apache/commons/configuration/ConfigurationUtils.java
+++ b/src/java/org/apache/commons/configuration/ConfigurationUtils.java
@@ -382,14 +382,6 @@ public final class ConfigurationUtils
      */
     public static URL locate(String base, String name)
     {
-        if (log.isDebugEnabled())
-        {
-            StringBuffer buf = new StringBuffer();
-            buf.append("ConfigurationUtils.locate(): base is ").append(base);
-            buf.append(", name is ").append(name);
-            log.debug(buf.toString());
-        }
-
         if (name == null)
         {
             // undefined, always return null
@@ -425,7 +417,7 @@ public final class ConfigurationUtils
                 }
             }
 
-            log.debug("Loading configuration from the URL " + url);
+            log.debug("Configuration loaded from the URL " + url);
         }
         catch (IOException e)
         {
@@ -441,11 +433,11 @@ public final class ConfigurationUtils
                 try
                 {
                     url = file.toURL();
-                    log.debug("Loading configuration from the absolute path " + name);
+                    log.debug("Configuration loaded from the absolute path " + name);
                 }
                 catch (MalformedURLException e)
                 {
-                    log.warn("Could not obtain URL from file", e);
+                    e.printStackTrace();
                 }
             }
         }
@@ -463,12 +455,12 @@ public final class ConfigurationUtils
 
                 if (url != null)
                 {
-                    log.debug("Loading configuration from the path " + file);
+                    log.debug("Configuration loaded from the base path " + name);
                 }
             }
-            catch (MalformedURLException e)
+            catch (IOException e)
             {
-                log.warn("Could not obtain URL from file", e);
+                e.printStackTrace();
             }
         }
 
@@ -485,13 +477,13 @@ public final class ConfigurationUtils
 
                 if (url != null)
                 {
-                    log.debug("Loading configuration from the home path " + file);
+                    log.debug("Configuration loaded from the home path " + name);
                 }
 
             }
-            catch (MalformedURLException e)
+            catch (IOException e)
             {
-                log.warn("Could not obtain URL from file", e);
+                e.printStackTrace();
             }
         }
 
@@ -520,7 +512,7 @@ public final class ConfigurationUtils
 
             if (url != null)
             {
-                log.debug("Loading configuration from the context classpath (" + resourceName + ")");
+                log.debug("Configuration loaded from the context classpath (" + resourceName + ")");
             }
         }
 
@@ -531,7 +523,7 @@ public final class ConfigurationUtils
 
             if (url != null)
             {
-                log.debug("Loading configuration from the system classpath (" + resourceName + ")");
+                log.debug("Configuration loaded from the system classpath (" + resourceName + ")");
             }
         }
         return url;
diff --git a/src/java/org/apache/commons/configuration/plist/XMLPropertyListConfiguration.java b/src/java/org/apache/commons/configuration/plist/XMLPropertyListConfiguration.java
index 470aa217..1b43b2a6 100644
--- a/src/java/org/apache/commons/configuration/plist/XMLPropertyListConfiguration.java
+++ b/src/java/org/apache/commons/configuration/plist/XMLPropertyListConfiguration.java
@@ -495,8 +495,7 @@ public class XMLPropertyListConfiguration extends AbstractHierarchicalFileConfig
             }
             catch (ParseException e)
             {
-                // ignore
-                ;
+                e.printStackTrace();
             }
         }
 
