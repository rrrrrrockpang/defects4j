diff --git a/src/test/java/org/apache/commons/configuration/TestSystemConfiguration.java b/src/test/java/org/apache/commons/configuration/TestSystemConfiguration.java
index ca767e46..0500d899 100644
--- a/src/test/java/org/apache/commons/configuration/TestSystemConfiguration.java
+++ b/src/test/java/org/apache/commons/configuration/TestSystemConfiguration.java
@@ -22,9 +22,7 @@ import static org.junit.Assert.assertTrue;
 
 import java.io.File;
 import java.io.IOException;
-import java.util.Iterator;
 import java.util.Properties;
-import java.util.concurrent.atomic.AtomicBoolean;
 
 import org.apache.commons.configuration.ex.ConfigurationException;
 import org.apache.commons.configuration.io.FileHandler;
@@ -94,61 +92,4 @@ public class TestSystemConfiguration
         assertEquals("System property not changed", "true",
                 System.getProperty(testProperty));
     }
-
-    /**
-     * Tests an append operation with a system configuration while system
-     * properties are modified from another thread. This is related to
-     * CONFIGURATION-570.
-     */
-    @Test
-    public void testAppendWhileConcurrentAccess() throws InterruptedException
-    {
-        final AtomicBoolean stop = new AtomicBoolean();
-        final String property =
-                SystemConfiguration.class.getName() + ".testProperty";
-        Thread t = new Thread()
-        {
-            @Override
-            public void run()
-            {
-                boolean setValue = true;
-                while (!stop.get())
-                {
-                    if (setValue)
-                    {
-                        System.setProperty(property, "true");
-                    }
-                    else
-                    {
-                        System.clearProperty(property);
-                    }
-                    setValue = !setValue;
-                }
-            }
-        };
-        try
-        {
-            t.start();
-
-            SystemConfiguration config = new SystemConfiguration();
-            PropertiesConfiguration props = new PropertiesConfiguration();
-            props.append(config);
-
-            stop.set(true);
-            t.join();
-            for (Iterator<String> keys = config.getKeys(); keys.hasNext();)
-            {
-                String key = keys.next();
-                if (!property.equals(key))
-                {
-                    assertEquals("Wrong value for " + key,
-                            config.getString(key), props.getString(key));
-                }
-            }
-        }
-        finally
-        {
-            System.clearProperty(property);
-        }
-    }
 }
