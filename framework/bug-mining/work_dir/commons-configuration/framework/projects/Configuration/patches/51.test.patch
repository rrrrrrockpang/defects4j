diff --git a/src/test/org/apache/commons/configuration/TestDefaultConfigurationBuilder.java b/src/test/org/apache/commons/configuration/TestDefaultConfigurationBuilder.java
index 7e4b3989..fe8523d0 100644
--- a/src/test/org/apache/commons/configuration/TestDefaultConfigurationBuilder.java
+++ b/src/test/org/apache/commons/configuration/TestDefaultConfigurationBuilder.java
@@ -31,7 +31,8 @@ import junit.framework.TestCase;
  * Test class for DefaultConfigurationBuilder.
  *
  * @author Oliver Heger
- * @version $Id$
+ * @version $Id: TestDefaultConfigurationBuilder.java 384601 2006-03-09
+ * 20:22:58Z oheger $
  */
 public class TestDefaultConfigurationBuilder extends TestCase
 {
@@ -69,7 +70,6 @@ public class TestDefaultConfigurationBuilder extends TestCase
         System.setProperty("test_file_xml", "test.xml");
         System.setProperty("test_file_combine", "testcombine1.xml");
         factory = new DefaultConfigurationBuilder();
-        factory.clearErrorListeners();  // avoid exception messages
     }
 
     /**
@@ -400,16 +400,6 @@ public class TestDefaultConfigurationBuilder extends TestCase
                 .getString("test.configuration"));
     }
 
-    /**
-     * Tests whether a default log error listener is registered at the builder
-     * instance.
-     */
-    public void testLogErrorListener()
-    {
-        assertEquals("No default error listener registered", 1,
-                new DefaultConfigurationBuilder().getErrorListeners().size());
-    }
-
     /**
      * Tests loading a definition file that contains optional configurations.
      */
@@ -421,20 +411,6 @@ public class TestDefaultConfigurationBuilder extends TestCase
         assertEquals("value", config.getProperty("element"));
     }
 
-    /**
-     * Tests whether loading a failing optional configuration causes an error
-     * event.
-     */
-    public void testLoadOptionalErrorEvent() throws Exception
-    {
-        factory.clearErrorListeners();
-        ConfigurationErrorListenerImpl listener = new ConfigurationErrorListenerImpl();
-        factory.addErrorListener(listener);
-        prepareOptionalTest("configuration", false);
-        listener.verify(DefaultConfigurationBuilder.EVENT_ERR_LOAD_OPTIONAL,
-                OPTIONAL_NAME, null);
-    }
-
     /**
      * Tests loading a definition file with optional and non optional
      * configuration sources. One non optional does not exist, so this should
