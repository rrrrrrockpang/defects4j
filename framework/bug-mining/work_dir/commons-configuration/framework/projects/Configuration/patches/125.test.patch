diff --git a/src/test/org/apache/commons/configuration/TestAbstractConfigurationBasicFeatures.java b/src/test/org/apache/commons/configuration/TestAbstractConfigurationBasicFeatures.java
index 01d215f5..738f9342 100644
--- a/src/test/org/apache/commons/configuration/TestAbstractConfigurationBasicFeatures.java
+++ b/src/test/org/apache/commons/configuration/TestAbstractConfigurationBasicFeatures.java
@@ -279,62 +279,6 @@ public class TestAbstractConfigurationBasicFeatures extends TestCase
         }
     }
 
-    /**
-     * Tests getList() for single non-string values.
-     */
-    public void testGetListNonString()
-    {
-        checkGetListScalar(new Integer(42));
-        checkGetListScalar(new Long(42));
-        checkGetListScalar(new Short((short) 42));
-        checkGetListScalar(new Byte((byte) 42));
-        checkGetListScalar(new Float(42));
-        checkGetListScalar(new Double(42));
-        checkGetListScalar(Boolean.TRUE);
-}
-
-    /**
-     * Tests getStringArray() for single son-string values.
-     */
-    public void testGetStringArrayNonString()
-    {
-        checkGetStringArrayScalar(new Integer(42));
-        checkGetStringArrayScalar(new Long(42));
-        checkGetStringArrayScalar(new Short((short) 42));
-        checkGetStringArrayScalar(new Byte((byte) 42));
-        checkGetStringArrayScalar(new Float(42));
-        checkGetStringArrayScalar(new Double(42));
-        checkGetStringArrayScalar(Boolean.TRUE);
-    }
-
-    /**
-     * Helper method for checking getList() if the property value is a scalar.
-     * @param value the value of the property
-     */
-    private void checkGetListScalar(Object value)
-    {
-        BaseConfiguration config = new BaseConfiguration();
-        config.addProperty(KEY_PREFIX, value);
-        List lst = config.getList(KEY_PREFIX);
-        assertEquals("Wrong number of values", 1, lst.size());
-        assertEquals("Wrong value", value.toString(), lst.get(0));
-    }
-
-    /**
-     * Helper method for checking getStringArray() if the property value is a
-     * scalar.
-     *
-     * @param value the value of the property
-     */
-    private void checkGetStringArrayScalar(Object value)
-    {
-        BaseConfiguration config = new BaseConfiguration();
-        config.addProperty(KEY_PREFIX, value);
-        String[] array = config.getStringArray(KEY_PREFIX);
-        assertEquals("Weong number of elements", 1, array.length);
-        assertEquals("Wrong value", value.toString(), array[0]);
-    }
-
     /**
      * Creates the source configuration for testing the copy() and append()
      * methods. This configuration contains keys with an odd index and values
diff --git a/src/test/org/apache/commons/configuration/TestConfigurationConverter.java b/src/test/org/apache/commons/configuration/TestConfigurationConverter.java
index 12c23ac9..60bbae2e 100644
--- a/src/test/org/apache/commons/configuration/TestConfigurationConverter.java
+++ b/src/test/org/apache/commons/configuration/TestConfigurationConverter.java
@@ -22,7 +22,6 @@ import java.util.Map;
 import java.util.Properties;
 
 import junit.framework.TestCase;
-
 import org.apache.commons.collections.ExtendedProperties;
 
 /**
@@ -30,7 +29,7 @@ import org.apache.commons.collections.ExtendedProperties;
  *
  * @author Martin Poeschl
  * @author Emmanuel Bourg
- * @version $Id$
+ * @version $Revision$, $Date$
  */
 public class TestConfigurationConverter extends TestCase
 {
@@ -107,18 +106,6 @@ public class TestConfigurationConverter extends TestCase
         assertEquals("'array' property", "item 1;item 2", props.getProperty("array"));
     }
 
-    /**
-     * Tests the conversion of a configuration object to properties if scalar
-     * values are involved. This test is related to CONFIGURATION-432.
-     */
-    public void testConfigurationToPropertiesScalarValue()
-    {
-        BaseConfiguration config = new BaseConfiguration();
-        config.addProperty("scalar", new Integer(42));
-        Properties props = ConfigurationConverter.getProperties(config);
-        assertEquals("Wrong value", "42", props.getProperty("scalar"));
-    }
-
     public void testConfigurationToMap()
     {
         Configuration config = new BaseConfiguration();
