diff --git a/src/java/org/apache/commons/configuration/JNDIConfiguration.java b/src/java/org/apache/commons/configuration/JNDIConfiguration.java
index 98e2e22a..1a76fc29 100644
--- a/src/java/org/apache/commons/configuration/JNDIConfiguration.java
+++ b/src/java/org/apache/commons/configuration/JNDIConfiguration.java
@@ -115,12 +115,10 @@ public class JNDIConfiguration extends AbstractConfiguration
      * @param keys All the keys that have been found.
      * @param context The parent context
      * @param prefix What prefix we are building on.
-     * @param processedCtx a set with the so far processed objects
      * @throws NamingException If JNDI has an issue.
      */
-    private void recursiveGetKeys(Set keys, Context context, String prefix, Set processedCtx) throws NamingException
+    private void recursiveGetKeys(Set keys, Context context, String prefix) throws NamingException
     {
-        processedCtx.add(context);
         NamingEnumeration elements = null;
 
         try
@@ -147,11 +145,7 @@ public class JNDIConfiguration extends AbstractConfiguration
                 {
                     // add the keys of the sub context
                     Context subcontext = (Context) object;
-                    if (!processedCtx.contains(subcontext))
-                    {
-                        recursiveGetKeys(keys, subcontext, key.toString(),
-                                processedCtx);
-                    }
+                    recursiveGetKeys(keys, subcontext, key.toString());
                 }
                 else
                 {
@@ -208,7 +202,7 @@ public class JNDIConfiguration extends AbstractConfiguration
             Set keys = new HashSet();
             if (context != null)
             {
-                recursiveGetKeys(keys, context, prefix, new HashSet());
+                recursiveGetKeys(keys, context, prefix);
             }
             else if (containsKey(prefix))
             {
