diff --git a/src/test/org/apache/commons/configuration/reloading/TestFileChangedReloadingStrategy.java b/src/test/org/apache/commons/configuration/reloading/TestFileChangedReloadingStrategy.java
index b31ba229..b440be75 100644
--- a/src/test/org/apache/commons/configuration/reloading/TestFileChangedReloadingStrategy.java
+++ b/src/test/org/apache/commons/configuration/reloading/TestFileChangedReloadingStrategy.java
@@ -22,8 +22,6 @@ import java.io.FileWriter;
 import java.net.URL;
 
 import junit.framework.TestCase;
-
-import org.apache.commons.configuration.ConfigurationException;
 import org.apache.commons.configuration.PropertiesConfiguration;
 import org.apache.commons.configuration.XMLConfiguration;
 
@@ -35,9 +33,6 @@ import org.apache.commons.configuration.XMLConfiguration;
  */
 public class TestFileChangedReloadingStrategy extends TestCase
 {
-    /** Constant for the name of a test properties file.*/
-    private static final String TEST_FILE = "test.properties";
-
     public void testAutomaticReloading() throws Exception
     {
         // create a new configuration
@@ -116,14 +111,14 @@ public class TestFileChangedReloadingStrategy extends TestCase
     public void testFromClassPath() throws Exception
     {
         PropertiesConfiguration config = new PropertiesConfiguration();
-        config.setFileName(TEST_FILE);
+        config.setFileName("test.properties");
         config.load();
         assertTrue(config.getBoolean("configuration.loaded"));
         FileChangedReloadingStrategy strategy = new FileChangedReloadingStrategy();
         config.setReloadingStrategy(strategy);
         assertEquals(config.getURL(), strategy.getFile().toURL());
     }
-
+    
     /**
      * Tests to watch a configuration file in a jar. In this case the jar file
      * itself should be monitored.
@@ -139,28 +134,4 @@ public class TestFileChangedReloadingStrategy extends TestCase
         assertNotNull("Strategy's file is null", file);
         assertEquals("Strategy does not monitor the jar file", "resources.jar", file.getName());
     }
-
-    /**
-     * Tests calling reloadingRequired() multiple times before a reload actually
-     * happens. This test is related to CONFIGURATION-302.
-     */
-    public void testReloadingRequiredMultipleTimes()
-            throws ConfigurationException
-    {
-        FileChangedReloadingStrategy strategy = new FileChangedReloadingStrategy()
-        {
-            protected boolean hasChanged()
-            {
-                // signal always a change
-                return true;
-            }
-        };
-        strategy.setRefreshDelay(100000);
-        PropertiesConfiguration config = new PropertiesConfiguration(TEST_FILE);
-        config.setReloadingStrategy(strategy);
-        assertTrue("Reloading not required", strategy.reloadingRequired());
-        assertTrue("Reloading no more required", strategy.reloadingRequired());
-        strategy.reloadingPerformed();
-        assertFalse("Reloading still required", strategy.reloadingRequired());
-    }
 }
