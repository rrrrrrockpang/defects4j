diff --git a/src/java/org/apache/commons/configuration/ConfigurationUtils.java b/src/java/org/apache/commons/configuration/ConfigurationUtils.java
index 294dab54..a06691ae 100644
--- a/src/java/org/apache/commons/configuration/ConfigurationUtils.java
+++ b/src/java/org/apache/commons/configuration/ConfigurationUtils.java
@@ -595,22 +595,7 @@ public final class ConfigurationUtils
      * Tries to convert the specified base path and file name into a file object.
      * This method is called e.g. by the save() methods of file based
      * configurations. The parameter strings can be relative files, absolute
-     * files and URLs as well. This implementation checks first whether the passed in
-     * file name is absolute. If this is the case, it is returned. Otherwise
-     * further checks are performed whether the base path and file name can be
-     * combined to a valid URL or a valid file name. <em>Note:</em> The test
-     * if the passed in file name is absolute is performed using
-     * <code>java.io.File.isAbsolute()</code>. If the file name starts with a
-     * slash, this method will return <b>true</b> on Unix, but <b>false</b> on
-     * Windows. So to ensure correct behavior for relative file names on all
-     * platforms you should never let relative paths start with a slash. E.g.
-     * in a configuration definition file do not use something like that:
-     * <pre>
-     * &lt;properties fileName="/subdir/my.properties"/&gt;
-     * </pre>
-     * Under Windows this path would be resolved relative to the configuration
-     * definition file. Under Unix this would be treated as an absolute path
-     * name.
+     * files and URLs as well.
      *
      * @param basePath the base path
      * @param fileName the file name
@@ -618,13 +603,6 @@ public final class ConfigurationUtils
      */
     public static File getFile(String basePath, String fileName)
     {
-        // Check if the file name is absolute
-        File f = new File(fileName);
-        if (f.isAbsolute())
-        {
-            return f;
-        }
-
         // Check if URLs are involved
         URL url;
         try
