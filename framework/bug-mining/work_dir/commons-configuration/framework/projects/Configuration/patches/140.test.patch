diff --git a/src/test/org/apache/commons/configuration/TestDefaultConfigurationBuilder.java b/src/test/org/apache/commons/configuration/TestDefaultConfigurationBuilder.java
index 0d2d1dc2..d61f4148 100644
--- a/src/test/org/apache/commons/configuration/TestDefaultConfigurationBuilder.java
+++ b/src/test/org/apache/commons/configuration/TestDefaultConfigurationBuilder.java
@@ -730,7 +730,7 @@ public class TestDefaultConfigurationBuilder extends TestCase
     /**
      * Tests if the returned combined configuration has the expected structure.
      */
-    public void testCombinedConfigurationStructure() throws ConfigurationException
+    public void testCombinedConfiguration() throws ConfigurationException
     {
         factory.setFile(INIT_FILE);
         CombinedConfiguration cc = (CombinedConfiguration) factory
@@ -751,35 +751,6 @@ public class TestDefaultConfigurationBuilder extends TestCase
         assertTrue("Config 2 not contained", names.contains("combiner2"));
     }
 
-    /**
-     * Helper method for testing the attributes of a combined configuration
-     * created by the builder.
-     *
-     * @param cc the configuration to be checked
-     */
-    private void checkCombinedConfigAttrs(CombinedConfiguration cc)
-    {
-        assertTrue("Wrong delimiter parsing flag",
-                cc.isDelimiterParsingDisabled());
-        assertTrue("Wrong reload check", cc.isForceReloadCheck());
-        assertTrue("Wrong ignore reload ex flag", cc.isIgnoreReloadExceptions());
-    }
-
-    /**
-     * Tests whether attributes are correctly set on the combined configurations
-     * for the override and additional sections.
-     */
-    public void testCombinedConfigurationAttributes() throws ConfigurationException
-    {
-        factory.setFile(INIT_FILE);
-        CombinedConfiguration cc = (CombinedConfiguration) factory
-                .getConfiguration();
-        checkCombinedConfigAttrs(cc);
-        CombinedConfiguration cc2 = (CombinedConfiguration) cc
-                .getConfiguration(DefaultConfigurationBuilder.ADDITIONAL_NAME);
-        checkCombinedConfigAttrs(cc2);
-    }
-
     /**
      * Tests the structure of the returned combined configuration if there is no
      * additional section.
