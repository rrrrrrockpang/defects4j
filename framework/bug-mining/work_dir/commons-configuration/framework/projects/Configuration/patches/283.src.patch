diff --git a/src/main/java/org/apache/commons/configuration2/PropertiesConfiguration.java b/src/main/java/org/apache/commons/configuration2/PropertiesConfiguration.java
index 4df6827f..438bba8b 100644
--- a/src/main/java/org/apache/commons/configuration2/PropertiesConfiguration.java
+++ b/src/main/java/org/apache/commons/configuration2/PropertiesConfiguration.java
@@ -27,7 +27,6 @@ import java.net.URL;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Collections;
-import java.util.Deque;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -644,12 +643,11 @@ public class PropertiesConfiguration extends BaseConfiguration
      *
      * @param key the property key
      * @param value the property value
-     * @param seenStack the stack of seen include URLs
      * @return a flag whether this is a normal property
      * @throws ConfigurationException if an error occurs
      * @since 1.3
      */
-    boolean propertyLoaded(final String key, final String value, final Deque<URL> seenStack)
+    boolean propertyLoaded(final String key, final String value)
             throws ConfigurationException
     {
         boolean result;
@@ -663,7 +661,7 @@ public class PropertiesConfiguration extends BaseConfiguration
                         getListDelimiterHandler().split(value, true);
                 for (final String f : files)
                 {
-                    loadIncludeFile(interpolate(f), false, seenStack);
+                    loadIncludeFile(interpolate(f), false);
                 }
             }
             result = false;
@@ -678,7 +676,7 @@ public class PropertiesConfiguration extends BaseConfiguration
                         getListDelimiterHandler().split(value, true);
                 for (final String f : files)
                 {
-                    loadIncludeFile(interpolate(f), true, seenStack);
+                    loadIncludeFile(interpolate(f), true);
                 }
             }
             result = false;
@@ -1855,11 +1853,9 @@ public class PropertiesConfiguration extends BaseConfiguration
      *
      * @param fileName the name of the file to load
      * @param optional whether or not the {@code fileName} is optional
-     * @param seenStack Stack of seen include URLs
      * @throws ConfigurationException if loading fails
      */
-    private void loadIncludeFile(final String fileName, final boolean optional, final Deque<URL> seenStack)
-            throws ConfigurationException
+    private void loadIncludeFile(final String fileName, final boolean optional) throws ConfigurationException
     {
         if (locator == null)
         {
@@ -1885,8 +1881,11 @@ public class PropertiesConfiguration extends BaseConfiguration
 
         if (url == null)
         {
-            getIncludeListener().accept(new ConfigurationException("Cannot resolve include file " + fileName,
-                    new FileNotFoundException(fileName)));
+            if (getIncludeListener() != null)
+            {
+                getIncludeListener().accept(new ConfigurationException(
+                        "Cannot resolve include file " + fileName, new FileNotFoundException(fileName)));
+            }
         }
         else
         {
@@ -1897,25 +1896,14 @@ public class PropertiesConfiguration extends BaseConfiguration
             {
                 try
                 {
-                    // Check for cycles
-                    if (seenStack.contains(url))
-                    {
-                        throw new ConfigurationException(
-                                String.format("Cycle detected loading %s, seen stack: %s", url, seenStack));
-                    }
-                    seenStack.add(url);
-                    try
-                    {
-                        fh.load(url);
-                    }
-                    finally
-                    {
-                        seenStack.pop();
-                    }
+                    fh.load(url);
                 }
                 catch (ConfigurationException e)
                 {
-                    getIncludeListener().accept(e);
+                    if (getIncludeListener() != null)
+                    {
+                        getIncludeListener().accept(e);
+                    }
                 }
             }
             finally
diff --git a/src/main/java/org/apache/commons/configuration2/PropertiesConfigurationLayout.java b/src/main/java/org/apache/commons/configuration2/PropertiesConfigurationLayout.java
index 4da001f3..dffff50b 100644
--- a/src/main/java/org/apache/commons/configuration2/PropertiesConfigurationLayout.java
+++ b/src/main/java/org/apache/commons/configuration2/PropertiesConfigurationLayout.java
@@ -19,8 +19,6 @@ package org.apache.commons.configuration2;
 import java.io.IOException;
 import java.io.Reader;
 import java.io.Writer;
-import java.net.URL;
-import java.util.ArrayDeque;
 import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
@@ -140,9 +138,6 @@ public class PropertiesConfigurationLayout implements EventListener<Configuratio
     /** Stores the force single line flag. */
     private boolean forceSingleLine;
 
-    /** Seen includes. */
-    private final ArrayDeque<URL> seenStack = new ArrayDeque<>();
-
     /**
      * Creates a new, empty instance of {@code PropertiesConfigurationLayout}.
      */
@@ -491,7 +486,7 @@ public class PropertiesConfigurationLayout implements EventListener<Configuratio
             while (reader.nextProperty())
             {
                 if (config.propertyLoaded(reader.getPropertyName(),
-                        reader.getPropertyValue(), seenStack))
+                        reader.getPropertyValue()))
                 {
                     final boolean contained = layoutData.containsKey(reader
                             .getPropertyName());
@@ -658,7 +653,6 @@ public class PropertiesConfigurationLayout implements EventListener<Configuratio
      */
     private void clear()
     {
-        seenStack.clear();
         layoutData.clear();
         setHeaderComment(null);
         setFooterComment(null);
