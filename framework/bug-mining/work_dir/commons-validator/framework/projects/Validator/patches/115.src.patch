diff --git a/src/main/java/org/apache/commons/validator/routines/InetAddressValidator.java b/src/main/java/org/apache/commons/validator/routines/InetAddressValidator.java
index b265cc16..e6134fcb 100644
--- a/src/main/java/org/apache/commons/validator/routines/InetAddressValidator.java
+++ b/src/main/java/org/apache/commons/validator/routines/InetAddressValidator.java
@@ -125,35 +125,7 @@ public class InetAddressValidator implements Serializable {
      * 
      * @since 1.4.1
      */
-    public boolean isValidInet6Address(String inet6AddressInput) {
-        String[] parts;
-        // remove prefix size. This will appear after the zone id (if any)
-        parts = inet6AddressInput.split("/", -1);
-        if (parts.length > 2) {
-            return false; // can only have one prefix specifier
-        }
-        if (parts.length == 2) {
-            if (parts[1].matches("\\d{1,3}")) { // Need to eliminate signs
-                int bits = Integer.parseInt(parts[1]); // cannot fail because of RE check
-                if (bits < 0 || bits > 128) {
-                    return false; // out of range
-                }
-            } else {
-                return false; // not a valid number
-            }
-        }
-        // remove zone-id
-        parts = parts[0].split("%", -1);
-        if (parts.length > 2) {
-            return false;
-        } else if (parts.length == 2){
-            // The id syntax is implemenatation independent, but it presumably cannot allow:
-            // whitespace, '/' or '%'
-            if (!parts[1].matches("[^\s/%]+")) {
-                return false; // invalid id
-            }
-        }
-        String inet6Address = parts[0];
+    public boolean isValidInet6Address(String inet6Address) {
         boolean containsCompressedZeroes = inet6Address.contains("::");
         if (containsCompressedZeroes && (inet6Address.indexOf("::") != inet6Address.lastIndexOf("::"))) {
             return false;
