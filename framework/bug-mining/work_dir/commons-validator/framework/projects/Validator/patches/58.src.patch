diff --git a/src/main/java/org/apache/commons/validator/routines/DomainValidator.java b/src/main/java/org/apache/commons/validator/routines/DomainValidator.java
index 7b6940ec..93c73948 100644
--- a/src/main/java/org/apache/commons/validator/routines/DomainValidator.java
+++ b/src/main/java/org/apache/commons/validator/routines/DomainValidator.java
@@ -1070,8 +1070,7 @@ public class DomainValidator implements Serializable {
      * @param input the string to convert, not null
      * @return converted input, or original input if conversion fails
      */
-    // Needed by UrlValidator
-    static String unicodeToASCII(String input) {
+    private static String unicodeToASCII(String input) {
         try {
             return /* java.net.IDN. */ toASCII(input);
         } catch (IllegalArgumentException e) { // input is not valid
diff --git a/src/main/java/org/apache/commons/validator/routines/UrlValidator.java b/src/main/java/org/apache/commons/validator/routines/UrlValidator.java
index d386ad3c..6533eb7c 100644
--- a/src/main/java/org/apache/commons/validator/routines/UrlValidator.java
+++ b/src/main/java/org/apache/commons/validator/routines/UrlValidator.java
@@ -160,12 +160,6 @@ public class UrlValidator implements Serializable {
     private static final String PORT_REGEX = "^:(\\d{1,5})$";
     private static final Pattern PORT_PATTERN = Pattern.compile(PORT_REGEX);
 
-    // Pattern to extract domain for IDN conversion
-    private static final Pattern HTTP_IDN_PATTERN = Pattern.compile("(https?://)([^/]+)(.*)", Pattern.CASE_INSENSITIVE);
-    private static final int PARSE_HTTP_IDN_SCHEME = 1;
-    private static final int PARSE_HTTP_IDN_AUTH = 2;
-    private static final int PARSE_HTTP_IDN_REST = 3;
-
     /**
      * Holds the set of current validation options.
      */
@@ -296,19 +290,7 @@ public class UrlValidator implements Serializable {
         }
 
         if (!ASCII_PATTERN.matcher(value).matches()) {
-            // Non-ASCII input, try and convert HTTP domain
-            Matcher httpMatcher = HTTP_IDN_PATTERN.matcher(value);
-            if (httpMatcher.lookingAt()) { // We have an http(s) URL
-                value =   httpMatcher.group(PARSE_HTTP_IDN_SCHEME)
-                        + DomainValidator.unicodeToASCII(httpMatcher.group(PARSE_HTTP_IDN_AUTH)) 
-                        + httpMatcher.group(PARSE_HTTP_IDN_REST);
-                if (!ASCII_PATTERN.matcher(value).matches()) {
-                    return false;
-                }
-                // Drop thru, we were able to convert the pattern
-            } else {
-                return false;
-            }
+            return false;
         }
 
         // Check the whole url address structure
