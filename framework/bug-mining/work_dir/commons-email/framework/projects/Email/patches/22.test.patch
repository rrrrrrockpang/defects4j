diff --git a/src/test/org/apache/commons/mail/EmailTest.java b/src/test/org/apache/commons/mail/EmailTest.java
index f70a9e1..6c622ed 100644
--- a/src/test/org/apache/commons/mail/EmailTest.java
+++ b/src/test/org/apache/commons/mail/EmailTest.java
@@ -16,7 +16,6 @@
  */
 package org.apache.commons.mail;
 
-import java.io.File;
 import java.io.UnsupportedEncodingException;
 import java.nio.charset.Charset;
 import java.nio.charset.IllegalCharsetNameException;
@@ -28,12 +27,14 @@ import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
 import java.util.Properties;
+
 import javax.mail.Authenticator;
 import javax.mail.Session;
 import javax.mail.internet.InternetAddress;
 import javax.mail.internet.MimeMessage;
 import javax.mail.internet.MimeMultipart;
 import javax.mail.internet.ParseException;
+
 import org.apache.commons.mail.mocks.MockEmailConcrete;
 
 /**
@@ -354,9 +355,9 @@ public class EmailTest extends BaseEmailTestCase
                 "joe.doe@apache.org",
                 "joe.doe@apache.org"));
         arrExpected.add(
-                new InternetAddress(
-                        "someone_here@work-address.com.au",
-                        "someone_here@work-address.com.au"));
+            new InternetAddress(
+                "someone_here@work-address.com.au",
+                "someone_here@work-address.com.au"));
 
         for (int i = 0; i < testEmails.length; i++)
         {
@@ -1319,18 +1320,18 @@ public class EmailTest extends BaseEmailTestCase
 
         testInetEmailValid.add(new InternetAddress("me@home.com", "Name1"));
         testInetEmailValid.add(
-                new InternetAddress(
-                        "joe.doe@apache.org",
-                        "joe.doe@apache.org"));
+            new InternetAddress(
+                "joe.doe@apache.org",
+                "joe.doe@apache.org"));
         testInetEmailValid.add(
-                new InternetAddress(
-                        "someone_here@work-address.com.au",
-                        "someone_here@work-address.com.au"));
+            new InternetAddress(
+                "someone_here@work-address.com.au",
+                "someone_here@work-address.com.au"));
 
         this.email.setBcc(testInetEmailValid);
         assertEquals(
-                testInetEmailValid.size(),
-                this.email.getBccAddresses().size());
+            testInetEmailValid.size(),
+            this.email.getBccAddresses().size());
     }
 
     /** */
@@ -1427,21 +1428,4 @@ public class EmailTest extends BaseEmailTestCase
         msg.saveChanges();
         assertEquals("application/octet-stream", msg.getContentType());
     }
-
-    public void testCorrectContentTypeForPNG() throws Exception
-    {
-        this.email.setHostName(this.strTestMailServer);
-        this.email.setSmtpPort(this.getMailServerPort());
-        this.email.setFrom("a@b.com");
-        this.email.addTo("c@d.com");
-        this.email.setSubject("test mail");
-
-        this.email.setCharset("ISO-8859-1");
-        File png = new File("./target/test-classes/images/logos/maven-feather.png");
-        this.email.setContent(png, "image/png");
-        this.email.buildMimeMessage();
-        MimeMessage msg = this.email.getMimeMessage();
-        msg.saveChanges();
-        assertEquals("image/png", msg.getContentType());
-    }
 }
diff --git a/src/test/org/apache/commons/mail/HtmlEmailTest.java b/src/test/org/apache/commons/mail/HtmlEmailTest.java
index 39c6f3d..d68f44f 100644
--- a/src/test/org/apache/commons/mail/HtmlEmailTest.java
+++ b/src/test/org/apache/commons/mail/HtmlEmailTest.java
@@ -19,15 +19,11 @@ package org.apache.commons.mail;
 import java.io.File;
 import java.io.IOException;
 import java.net.URL;
-import java.util.List;
 
-import javax.activation.DataSource;
 import javax.activation.FileDataSource;
-import javax.mail.internet.MimeMessage;
 
 import org.apache.commons.mail.mocks.MockHtmlEmailConcrete;
 import org.apache.commons.mail.settings.EmailConfiguration;
-import org.apache.commons.mail.util.MimeMessageParser;
 
 /**
  * JUnit test case for HtmlEmail Class.
@@ -648,40 +644,5 @@ public class HtmlEmailTest extends BaseEmailTestCase
          // back?
          String returnedCid = this.email.embed(file);
          assertEquals("didn't get same CID after embedding same file twice", testCid, returnedCid);
-     }
-    
-    public void testHtmlMailMimeLayout() throws Exception
-    {
-        assertCorrectContentType("contentTypeTest.gif", "image/gif");
-        assertCorrectContentType("contentTypeTest.jpg", "image/jpeg");
-        assertCorrectContentType("contentTypeTest.png", "image/png");
-    }
-
-    private void assertCorrectContentType(String picture, String contentType) throws Exception {
-        HtmlEmail htmlEmail = createDefaultHtmlEmail();
-        String cid = htmlEmail.embed(new File("./src/test/images/" + picture), "Apache Logo");
-        String htmlMsg = "<html><img src=\"cid:" + cid + "\"><html>";
-        htmlEmail.setHtmlMsg(htmlMsg);
-        htmlEmail.buildMimeMessage();
-
-        MimeMessage mm = htmlEmail.getMimeMessage();
-        mm.saveChanges();
-        MimeMessageParser mmp = new MimeMessageParser(mm);
-        mmp.parse();
-
-        List attachments = mmp.getAttachmentList();
-        assertEquals("Attachment size", 1, attachments.size());
-
-        DataSource ds = (DataSource) attachments.get(0);
-        assertEquals("Content type", contentType, ds.getContentType());
-    }
-
-    private HtmlEmail createDefaultHtmlEmail() throws EmailException {
-        HtmlEmail htmlEmail = new HtmlEmail();
-        htmlEmail.setHostName(this.strTestMailServer);
-        htmlEmail.setSmtpPort(this.getMailServerPort());
-        htmlEmail.setFrom("a@b.com");
-        htmlEmail.addTo("c@d.com");
-        return htmlEmail;
-    }
+     }	    
 }
