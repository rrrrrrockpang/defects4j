diff --git a/src/test/java/org/apache/commons/mail/ImageHtmlEmailTest.java b/src/test/java/org/apache/commons/mail/ImageHtmlEmailTest.java
index e8f85fc..ddb3719 100644
--- a/src/test/java/org/apache/commons/mail/ImageHtmlEmailTest.java
+++ b/src/test/java/org/apache/commons/mail/ImageHtmlEmailTest.java
@@ -29,9 +29,7 @@ import org.apache.commons.mail.util.MimeMessageUtils;
 import org.junit.Before;
 import org.junit.Test;
 
-import javax.activation.DataSource;
 import javax.mail.internet.MimeMessage;
-
 import java.io.File;
 import java.io.IOException;
 import java.io.InputStream;
@@ -242,46 +240,6 @@ public class ImageHtmlEmailTest extends HtmlEmailTest {
         assertTrue(mimeMessageParser.getAttachmentList().size() == 1);
     }
 
-    @Test
-    public void testSendClassPathFileWithNullName() throws Exception {
-        Logger.getLogger(ImageHtmlEmail.class.getName()).setLevel(Level.FINEST);
-
-        // Create the email message
-        getMailServer();
-
-        final String strSubject = "Test HTML Send default";
-
-        email = new MockImageHtmlEmailConcrete();
-        email.setDataSourceResolver(new MockDataSourceClassPathResolver("/", TEST_IS_LENIENT));
-        email.setHostName(strTestMailServer);
-        email.setSmtpPort(getMailServerPort());
-        email.setFrom(strTestMailFrom);
-        email.addTo(strTestMailTo);
-        email.setSubject(strSubject);
-
-        final String html = loadUrlContent(TEST2_HTML_URL);
-
-        // set the html message
-        email.setHtmlMsg(html);
-
-        // set the alternative message
-        email.setTextMsg("Your email client does not support HTML messages");
-
-        // send the email
-        email.send();
-
-        fakeMailServer.stop();
-
-        assertEquals(1, fakeMailServer.getMessages().size());
-        final MimeMessage mimeMessage = fakeMailServer.getMessages().get(0).getMimeMessage();
-        MimeMessageUtils.writeMimeMessage(mimeMessage,
-                new File("./target/test-emails/testSendClassPathFileWithNullName.eml"));
-
-        final MimeMessageParser mimeMessageParser = new MimeMessageParser(mimeMessage).parse();
-        assertTrue(mimeMessageParser.getHtmlContent().contains("\"cid:"));
-        assertTrue(mimeMessageParser.getAttachmentList().size() == 1);
-    }
-
     @Test
     public void testSendHTMLAutoResolveFile() throws Exception {
         Logger.getLogger(ImageHtmlEmail.class.getName()).setLevel(Level.FINEST);
@@ -490,20 +448,4 @@ public class ImageHtmlEmailTest extends HtmlEmailTest {
         }
         return html.toString();
     }
-    
-    private static final class MockDataSourceClassPathResolver extends DataSourceClassPathResolver {
-
-        public MockDataSourceClassPathResolver(final String classPathBase, final boolean lenient) {
-            super(classPathBase, lenient);
-        }
-
-        @Override
-        public DataSource resolve(String resourceLocation, boolean isLenient) throws IOException {
-            javax.mail.util.ByteArrayDataSource ds =
-                    (javax.mail.util.ByteArrayDataSource) super.resolve(resourceLocation, isLenient);
-            ds.setName(null);
-            return ds;
-        }
-        
-    }
 }
