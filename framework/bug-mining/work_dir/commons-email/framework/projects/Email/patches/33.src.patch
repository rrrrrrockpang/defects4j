diff --git a/src/main/java/org/apache/commons/mail/ByteArrayDataSource.java b/src/main/java/org/apache/commons/mail/ByteArrayDataSource.java
index b6b5b02..1cf9873 100644
--- a/src/main/java/org/apache/commons/mail/ByteArrayDataSource.java
+++ b/src/main/java/org/apache/commons/mail/ByteArrayDataSource.java
@@ -34,10 +34,6 @@ import javax.activation.DataSource;
  * - a byte array<br>
  * - a String<br>
  *
- * <p>
- * From version 1.3.1, it is possible to set a name for this DataSource,
- * and it is recommended to do so.
- *
  * @since 1.0
  * @author <a href="mailto:colin.chalmers@maxware.nl">Colin Chalmers</a>
  * @author <a href="mailto:jon@latchkey.com">Jon S. Stevens</a>
@@ -55,13 +51,6 @@ public class ByteArrayDataSource implements DataSource
     /** The Content-type. */
     private final String type; // = "application/octet-stream";
 
-    /**
-     * The name associated with this data source.
-     * By default, the name is an empty string, similar to javax.mail.util.ByteArrayDataSource.
-     * @since 1.3.1
-     */
-    private String name = "";
-    
     /**
      * Create a datasource from a byte array.
      *
@@ -213,17 +202,6 @@ public class ByteArrayDataSource implements DataSource
         return new ByteArrayInputStream(baos.toByteArray());
     }
 
-    /**
-     * Sets the name for this DataSource.
-     *
-     * @param name The name.
-     * @since 1.3.1
-     */
-    public void setName(String name)
-    {
-        this.name = name;
-    }
-
     /**
      * Get the name.
      *
@@ -232,7 +210,7 @@ public class ByteArrayDataSource implements DataSource
      */
     public String getName()
     {
-        return name;
+        return "ByteArrayDataSource";
     }
 
     /**
diff --git a/src/main/java/org/apache/commons/mail/ImageHtmlEmail.java b/src/main/java/org/apache/commons/mail/ImageHtmlEmail.java
index 01fadad..4c337bd 100644
--- a/src/main/java/org/apache/commons/mail/ImageHtmlEmail.java
+++ b/src/main/java/org/apache/commons/mail/ImageHtmlEmail.java
@@ -161,11 +161,6 @@ public class ImageHtmlEmail extends HtmlEmail
             if (dataSource != null)
             {
                 String name = dataSource.getName();
-                if (EmailUtils.isEmpty(name))
-                {
-                    name = resourceLocation;
-                }
-
                 String cid = cidCache.get(name);
 
                 if (cid == null)
diff --git a/src/main/java/org/apache/commons/mail/resolver/DataSourceClassPathResolver.java b/src/main/java/org/apache/commons/mail/resolver/DataSourceClassPathResolver.java
index 633d909..dca4f9b 100644
--- a/src/main/java/org/apache/commons/mail/resolver/DataSourceClassPathResolver.java
+++ b/src/main/java/org/apache/commons/mail/resolver/DataSourceClassPathResolver.java
@@ -93,11 +93,7 @@ public class DataSourceClassPathResolver extends DataSourceBaseResolver
 
                 if (is != null)
                 {
-                    ByteArrayDataSource ds = new ByteArrayDataSource(is, mimeType);
-                    // EMAIL-125: set the name of the DataSource to the normalized resource URL
-                    // similar to other DataSource implementations, e.g. FileDataSource, URLDataSource
-                    ds.setName(DataSourceClassPathResolver.class.getResource(resourceName).toString());
-                    result = ds;
+                    result = new ByteArrayDataSource(is, mimeType);
                 }
                 else
                 {
