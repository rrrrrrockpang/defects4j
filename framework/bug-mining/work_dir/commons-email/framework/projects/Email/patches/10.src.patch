diff --git a/src/java/org/apache/commons/mail/Email.java b/src/java/org/apache/commons/mail/Email.java
index 43096ef..e2d5d88 100644
--- a/src/java/org/apache/commons/mail/Email.java
+++ b/src/java/org/apache/commons/mail/Email.java
@@ -614,10 +614,8 @@ public abstract class Email
 
     /**
      * Set the FROM field of the email to use the specified address. The email
-     * address will also be used as the personal name.
-     * The name will be encoded by the charset of {@link #setCharset(java.lang.String) setCharset()}.
-     * If it is not set, it will be encoded using 
-     * the Java platform's default charset (UTF-16) if it contains
+     * address will also be used as the personal name. The name will be encoded
+     * using the Java platform's default charset (UTF-16) if it contains
      * non-ASCII characters; otherwise, it is used as is.
      *
      * @param email A String.
@@ -633,11 +631,9 @@ public abstract class Email
 
     /**
      * Set the FROM field of the email to use the specified address and the
-     * specified personal name. 
-     * The name will be encoded by the charset of {@link #setCharset(java.lang.String) setCharset()}.
-     * If it is not set, it will be encoded using 
-     * the Java platform's default charset (UTF-16) if it contains
-     * non-ASCII characters; otherwise, it is used as is.
+     * specified personal name. The name will be encoded using the Java
+     * platform's default charset (UTF-16) if it contains non-ASCII
+     * characters; otherwise, it is used as is.
      *
      * @param email A String.
      * @param name A String.
@@ -648,7 +644,7 @@ public abstract class Email
     public Email setFrom(String email, String name)
         throws EmailException
     {
-        return setFrom(email, name, this.charset);
+        return setFrom(email, name, null);
     }
 
     /**
@@ -671,11 +667,8 @@ public abstract class Email
 
     /**
      * Add a recipient TO to the email. The email
-     * address will also be used as the personal name.
-     * The name will be encoded by the charset of
-     * {@link #setCharset(java.lang.String) setCharset()}.
-     * If it is not set, it will be encoded using 
-     * the Java platform's default charset (UTF-16) if it contains
+     * address will also be used as the personal name. The name will be encoded
+     * using the Java platform's default charset (UTF-16) if it contains
      * non-ASCII characters; otherwise, it is used as is.
      *
      * @param email A String.
@@ -691,12 +684,9 @@ public abstract class Email
 
     /**
      * Add a recipient TO to the email using the specified address and the
-     * specified personal name.
-     * The name will be encoded by the charset of
-     * {@link #setCharset(java.lang.String) setCharset()}.
-     * If it is not set, it will be encoded using 
-     * the Java platform's default charset (UTF-16) if it contains
-     * non-ASCII characters; otherwise, it is used as is.
+     * specified personal name. The name will be encoded using the Java
+     * platform's default charset (UTF-16) if it contains non-ASCII
+     * characters; otherwise, it is used as is.
      *
      * @param email A String.
      * @param name A String.
@@ -707,7 +697,7 @@ public abstract class Email
     public Email addTo(String email, String name)
         throws EmailException
     {
-        return addTo(email, name, this.charset);
+        return addTo(email, name, null);
     }
 
     /**
@@ -752,10 +742,8 @@ public abstract class Email
 
     /**
      * Add a recipient CC to the email. The email
-     * address will also be used as the personal name.
-     * The name will be encoded by the charset of {@link #setCharset(java.lang.String) setCharset()}.
-     * If it is not set, it will be encoded using 
-     * the Java platform's default charset (UTF-16) if it contains
+     * address will also be used as the personal name. The name will be encoded
+     * using the Java platform's default charset (UTF-16) if it contains
      * non-ASCII characters; otherwise, it is used as is.
      *
      * @param email A String.
@@ -771,11 +759,9 @@ public abstract class Email
 
     /**
      * Add a recipient CC to the email using the specified address and the
-     * specified personal name.
-     * The name will be encoded by the charset of {@link #setCharset(java.lang.String) setCharset()}.
-     * If it is not set, it will be encoded using 
-     * the Java platform's default charset (UTF-16) if it contains
-     * non-ASCII characters; otherwise, it is used as is.
+     * specified personal name. The name will be encoded using the Java
+     * platform's default charset (UTF-16) if it contains non-ASCII
+     * characters; otherwise, it is used as is.
      *
      * @param email A String.
      * @param name A String.
@@ -786,7 +772,7 @@ public abstract class Email
     public Email addCc(String email, String name)
         throws EmailException
     {
-        return addCc(email, name, this.charset);
+        return addCc(email, name, null);
     }
 
     /**
@@ -831,10 +817,8 @@ public abstract class Email
 
     /**
      * Add a blind BCC recipient to the email. The email
-     * address will also be used as the personal name.
-     * The name will be encoded by the charset of {@link #setCharset(java.lang.String) setCharset()}.
-     * If it is not set, it will be encoded using 
-     * the Java platform's default charset (UTF-16) if it contains
+     * address will also be used as the personal name. The name will be encoded
+     * using the Java platform's default charset (UTF-16) if it contains
      * non-ASCII characters; otherwise, it is used as is.
      *
      * @param email A String.
@@ -850,11 +834,9 @@ public abstract class Email
 
     /**
      * Add a blind BCC recipient to the email using the specified address and
-     * the specified personal name.
-     * The name will be encoded by the charset of {@link #setCharset(java.lang.String) setCharset()}.
-     * If it is not set, it will be encoded using 
-     * the Java platform's default charset (UTF-16) if it contains
-     * non-ASCII characters; otherwise, it is used as is.
+     * the specified personal name. The name will be encoded using the Java
+     * platform's default charset (UTF-16) if it contains non-ASCII
+     * characters; otherwise, it is used as is.
      *
      * @param email A String.
      * @param name A String.
@@ -865,7 +847,7 @@ public abstract class Email
     public Email addBcc(String email, String name)
         throws EmailException
     {
-        return addBcc(email, name, this.charset);
+        return addBcc(email, name, null);
     }
 
     /**
@@ -910,10 +892,8 @@ public abstract class Email
 
     /**
      * Add a reply to address to the email. The email
-     * address will also be used as the personal name.
-     * The name will be encoded by the charset of {@link #setCharset(java.lang.String) setCharset()}.
-     * If it is not set, it will be encoded using 
-     * the Java platform's default charset (UTF-16) if it contains
+     * address will also be used as the personal name. The name will be encoded
+     * using the Java platform's default charset (UTF-16) if it contains
      * non-ASCII characters; otherwise, it is used as is.
      *
      * @param email A String.
@@ -929,11 +909,9 @@ public abstract class Email
 
     /**
      * Add a reply to address to the email using the specified address and
-     * the specified personal name.
-     * The name will be encoded by the charset of {@link #setCharset(java.lang.String) setCharset()}.
-     * If it is not set, it will be encoded using 
-     * the Java platform's default charset (UTF-16) if it contains
-     * non-ASCII characters; otherwise, it is used as is.
+     * the specified personal name. The name will be encoded using the Java
+     * platform's default charset (UTF-16) if it contains non-ASCII
+     * characters; otherwise, it is used as is.
      *
      * @param email A String.
      * @param name A String.
@@ -944,7 +922,7 @@ public abstract class Email
     public Email addReplyTo(String email, String name)
         throws EmailException
     {
-        return addReplyTo(email, name, this.charset);
+        return addReplyTo(email, name, null);
     }
 
     /**
