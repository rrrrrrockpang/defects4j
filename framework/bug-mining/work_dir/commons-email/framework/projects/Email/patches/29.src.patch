diff --git a/src/main/java/org/apache/commons/mail/EmailUtils.java b/src/main/java/org/apache/commons/mail/EmailUtils.java
index ba11e0b..0e176a2 100644
--- a/src/main/java/org/apache/commons/mail/EmailUtils.java
+++ b/src/main/java/org/apache/commons/mail/EmailUtils.java
@@ -21,12 +21,9 @@ import org.apache.commons.mail.util.MimeMessageUtils;
 
 import javax.mail.internet.MimeMessage;
 import javax.mail.MessagingException;
-
-import java.util.BitSet;
 import java.util.Random;
 import java.io.File;
 import java.io.IOException;
-import java.nio.charset.Charset;
 
 /**
  * Utility methods used by commons-email.
@@ -53,55 +50,6 @@ final class EmailUtils
      */
     private static final Random RANDOM = new Random();
 
-    /**
-     * The default charset used for URL encoding.
-     */
-    private static final Charset US_ASCII = Charset.forName("US-ASCII");
-
-    /**
-     * Radix used in encoding.
-     */
-    private static final int RADIX = 16;
-
-    /**
-     * The escape character used for the URL encoding scheme.
-     */
-    private static final char ESCAPE_CHAR = '%';
-
-    /**
-     * BitSet of RFC 2392 safe URL characters.
-     */
-    private static final BitSet SAFE_URL = new BitSet(256);
-
-    // Static initializer for safe_uri
-    static {
-        // alpha characters
-        for (int i = 'a'; i <= 'z'; i++) {
-            SAFE_URL.set(i);
-        }
-        for (int i = 'A'; i <= 'Z'; i++) {
-            SAFE_URL.set(i);
-        }
-        // numeric characters
-        for (int i = '0'; i <= '9'; i++) {
-            SAFE_URL.set(i);
-        }
-
-        // safe chars
-        SAFE_URL.set('-');
-        SAFE_URL.set('_');
-        SAFE_URL.set('.');
-        SAFE_URL.set('*');
-        SAFE_URL.set('+');
-        SAFE_URL.set('$');
-        SAFE_URL.set('!');
-        SAFE_URL.set('\'');
-        SAFE_URL.set('(');
-        SAFE_URL.set(')');
-        SAFE_URL.set(',');
-        SAFE_URL.set('@');
-    }
-
     /**
      * Constructs a new <code>EmailException</code> with no detail message.
      */
@@ -269,44 +217,6 @@ final class EmailUtils
         return buffer.toString();
     }
 
-    /**
-     * Encodes an input string according to RFC 2392. Unsafe characters are escaped.
-     *
-     * @param input the input string to be URL encoded
-     * @return a URL encoded string
-     * @see <a href="http://tools.ietf.org/html/rfc2392">RFC 2392</a>
-     */
-    static String encodeUrl(final String input)
-    {
-        if (input == null)
-        {
-            return null;
-        }
-
-        final StringBuilder buffer = new StringBuilder();
-        for (byte c : input.getBytes(US_ASCII))
-        {
-            int b = c;
-            if (b < 0)
-            {
-                b = 256 + b;
-            }
-            if (SAFE_URL.get(b))
-            {
-                buffer.append((char) b);
-            }
-            else
-            {
-                buffer.append(ESCAPE_CHAR);
-                char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, RADIX));
-                char hex2 = Character.toUpperCase(Character.forDigit(b & 0xF, RADIX));
-                buffer.append(hex1);
-                buffer.append(hex2);
-            }
-        }
-        return buffer.toString();
-    }
-
     /**
      * Convenience method to write a MimeMessage into a file.
      *
diff --git a/src/main/java/org/apache/commons/mail/HtmlEmail.java b/src/main/java/org/apache/commons/mail/HtmlEmail.java
index 57b9c41..ea26d45 100644
--- a/src/main/java/org/apache/commons/mail/HtmlEmail.java
+++ b/src/main/java/org/apache/commons/mail/HtmlEmail.java
@@ -19,10 +19,8 @@ package org.apache.commons.mail;
 import java.io.File;
 import java.io.IOException;
 import java.io.InputStream;
-import java.io.UnsupportedEncodingException;
 import java.net.MalformedURLException;
 import java.net.URL;
-import java.net.URLEncoder;
 import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;
@@ -419,7 +417,7 @@ public class HtmlEmail extends MultiPartEmail
             throw new EmailException("file " + filePath + " isn't readable");
         }
 
-        return embed(new FileDataSource(file), file.getName(), cid);
+        return embed(new FileDataSource(file), file.getName());
     }
 
     /**
@@ -466,7 +464,7 @@ public class HtmlEmail extends MultiPartEmail
      * @param dataSource the <code>DataSource</code> to embed
      * @param name the name that will be set in the filename header field
      * @param cid the Content-ID to use for this <code>DataSource</code>
-     * @return the URL encoded Content-ID for this <code>DataSource</code>
+     * @return the supplied Content-ID for this <code>DataSource</code>
      * @throws EmailException if the embedding fails or if <code>name</code> is
      * null or empty
      * @since 1.1
@@ -483,9 +481,6 @@ public class HtmlEmail extends MultiPartEmail
 
         try
         {
-            // url encode the cid according to rfc 2392
-            cid = EmailUtils.encodeUrl(cid);
-
             mbp.setDataHandler(new DataHandler(dataSource));
             mbp.setFileName(name);
             mbp.setDisposition(EmailAttachment.INLINE);
