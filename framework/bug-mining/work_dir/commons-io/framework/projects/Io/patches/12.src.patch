diff --git a/src/java/org/apache/commons/io/filefilter/AgeFileFilter.java b/src/java/org/apache/commons/io/filefilter/AgeFileFilter.java
index 8078dc0a..d3ba495e 100644
--- a/src/java/org/apache/commons/io/filefilter/AgeFileFilter.java
+++ b/src/java/org/apache/commons/io/filefilter/AgeFileFilter.java
@@ -22,8 +22,7 @@ import java.util.Date;
 import org.apache.commons.io.FileUtils;
 
 /**
- * Filters files based on a cutoff time, can filter either newer
- * files or files equal to or older.
+ * Filters files based on a cutoff time, can filter either older or newer files.
  * <p>
  * For example, to print all files and directories in the
  * current directory older than one day:
@@ -50,8 +49,7 @@ public class AgeFileFilter extends AbstractFileFilter {
     private boolean acceptOlder;
 
     /**
-     * Constructs a new age file filter for files equal to or older than
-     * a certain cutoff
+     * Constructs a new age file filter for files older than a certain cutoff.
      *
      * @param cutoff  the threshold age of the files
      */
@@ -64,8 +62,7 @@ public class AgeFileFilter extends AbstractFileFilter {
      * of a certain cutoff.
      *
      * @param cutoff  the threshold age of the files
-     * @param acceptOlder  if true, older files (at or before the cutoff)
-     * are accepted, else newer ones (after the cutoff).
+     * @param acceptOlder  if true, older files are accepted, else newer ones
      */
     public AgeFileFilter(long cutoff, boolean acceptOlder) {
         this.acceptOlder = acceptOlder;
@@ -73,8 +70,8 @@ public class AgeFileFilter extends AbstractFileFilter {
     }
 
     /**
-     * Constructs a new age file filter for files older than (at or before)
-     * a certain cutoff date.
+     * Constructs a new age file filter for files older than a certain
+     * cutoff date.
      *
      * @param cutoffDate  the threshold age of the files
      */
@@ -87,16 +84,15 @@ public class AgeFileFilter extends AbstractFileFilter {
      * of a certain cutoff date.
      *
      * @param cutoffDate  the threshold age of the files
-     * @param acceptOlder  if true, older files (at or before the cutoff)
-     * are accepted, else newer ones (after the cutoff).
+     * @param acceptOlder  if true, older files are accepted, else newer ones
      */
     public AgeFileFilter(Date cutoffDate, boolean acceptOlder) {
         this(cutoffDate.getTime(), acceptOlder);
     }
 
     /**
-     * Constructs a new age file filter for files older than (at or before)
-     * a certain File (whose last modification time will be used as reference).
+     * Constructs a new age file filter for files older than a certain
+     * File (whose last modification time will be used as reference).
      *
      * @param cutoffReference  the file whose last modification
      *        time is usesd as the threshold age of the files
@@ -112,8 +108,7 @@ public class AgeFileFilter extends AbstractFileFilter {
      *
      * @param cutoffReference  the file whose last modification
      *        time is usesd as the threshold age of the files
-     * @param acceptOlder  if true, older files (at or before the cutoff)
-     * are accepted, else newer ones (after the cutoff).
+     * @param acceptOlder  if true, older files are accepted, else newer ones
      */
     public AgeFileFilter(File cutoffReference, boolean acceptOlder) {
         this(cutoffReference.lastModified(), acceptOlder);
@@ -123,11 +118,7 @@ public class AgeFileFilter extends AbstractFileFilter {
     /**
      * Checks to see if the last modification of the file matches cutoff
      * favorably.
-     * <p>
-     * If last modification time equals cutoff and newer files are required,
-     * file <b>IS NOT</b> selected.
-     * If last modification time equals cutoff and older files are required,
-     * file <b>IS</b> selected.
+     * If last modification time equals cutoff, file is not selected.
      *
      * @param file  the File to check
      * @return true if the filename matches
diff --git a/src/java/org/apache/commons/io/filefilter/SizeFileFilter.java b/src/java/org/apache/commons/io/filefilter/SizeFileFilter.java
index 371b5d70..80aa8698 100644
--- a/src/java/org/apache/commons/io/filefilter/SizeFileFilter.java
+++ b/src/java/org/apache/commons/io/filefilter/SizeFileFilter.java
@@ -19,8 +19,8 @@ package org.apache.commons.io.filefilter;
 import java.io.File;
 
 /**
- * Filters files based on size, can filter either smaller files or
- * files equal to or larger than a given threshold.
+ * Filters files based on size, can filter either larger or smaller files
+ * as compared to a given threshold.
  * <p>
  * For example, to print all files and directories in the
  * current directory whose size is greater than 1 MB:
@@ -45,8 +45,7 @@ public class SizeFileFilter extends AbstractFileFilter {
     private boolean acceptLarger;
 
     /**
-     * Constructs a new size file filter for files equal to or 
-     * larger than a certain size.
+     * Constructs a new size file filter for files larger than a certain size.
      *
      * @param size  the threshold size of the files
      * @throws IllegalArgumentException if the size is negative
@@ -60,8 +59,7 @@ public class SizeFileFilter extends AbstractFileFilter {
      * threshold.
      *
      * @param size  the threshold size of the files
-     * @param acceptLarger  if true, files equal to or larger are accepted,
-     * otherwise smaller ones (but not equal to)
+     * @param acceptLarger  if true, larger files are accepted, else smaller ones
      * @throws IllegalArgumentException if the size is negative
      */
     public SizeFileFilter(long size, boolean acceptLarger) {
@@ -75,11 +73,7 @@ public class SizeFileFilter extends AbstractFileFilter {
     //-----------------------------------------------------------------------
     /**
      * Checks to see if the size of the file is favorable.
-     * <p>
-     * If size equals threshold and smaller files are required,
-     * file <b>IS NOT</b> selected.
-     * If size equals threshold and larger files are required,
-     * file <b>IS</b> selected.
+     * If size equals threshold, file is not selected.
      *
      * @param file  the File to check
      * @return true if the filename matches
