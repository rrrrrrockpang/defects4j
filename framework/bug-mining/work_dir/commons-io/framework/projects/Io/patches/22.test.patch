diff --git a/src/test/org/apache/commons/io/FileUtilsTestCase.java b/src/test/org/apache/commons/io/FileUtilsTestCase.java
index 12e938e3..8dadf8f3 100644
--- a/src/test/org/apache/commons/io/FileUtilsTestCase.java
+++ b/src/test/org/apache/commons/io/FileUtilsTestCase.java
@@ -143,36 +143,6 @@ public class FileUtilsTestCase extends FileBasedTestCase {
     }
 
     //-----------------------------------------------------------------------
-    void openOutputStream_noParent(boolean createFile) throws Exception {
-        File file = new File("test.txt");
-        assertNull(file.getParentFile());
-        try {
-            if (createFile) {
-            createLineBasedFile(file, new String[]{"Hello"});}
-            FileOutputStream out = null;
-            try {
-                out = FileUtils.openOutputStream(file);
-                out.write(0);
-            } finally {
-                IOUtils.closeQuietly(out);
-            }
-            assertEquals(true, file.exists());
-        } finally {
-            if (file.delete() == false) {
-                file.deleteOnExit();
-            }
-        }
-    }
-
-    public void test_openOutputStream_noParentCreateFile() throws Exception {
-        openOutputStream_noParent(true);
-    }
-
-    public void test_openOutputStream_noParentNoFile() throws Exception {
-        openOutputStream_noParent(false);
-    }
-
-
     public void test_openOutputStream_exists() throws Exception {
         File file = new File(getTestDirectory(), "test.txt");
         createLineBasedFile(file, new String[] {"Hello"});
diff --git a/src/test/org/apache/commons/io/testtools/FileBasedTestCase.java b/src/test/org/apache/commons/io/testtools/FileBasedTestCase.java
index c0e991ce..6f9aed87 100644
--- a/src/test/org/apache/commons/io/testtools/FileBasedTestCase.java
+++ b/src/test/org/apache/commons/io/testtools/FileBasedTestCase.java
@@ -93,10 +93,12 @@ public abstract class FileBasedTestCase extends TestCase {
     }
 
     protected void createLineBasedFile(File file, String[] data) throws IOException {
-        if (file.getParentFile() != null && !file.getParentFile().exists()) {
-            throw new IOException("Cannot create file " + file + " as the parent directory does not exist");
+        if (!file.getParentFile().exists()) {
+            throw new IOException("Cannot create file " + file
+                    + " as the parent directory does not exist");
         }
-        PrintWriter output = new PrintWriter(new OutputStreamWriter(new FileOutputStream(file), "UTF-8"));
+        PrintWriter output = new PrintWriter(
+            new OutputStreamWriter(new FileOutputStream(file), "UTF-8"));
         try {
             for (int i = 0; i < data.length; i++) {
                 output.println(data[i]);
