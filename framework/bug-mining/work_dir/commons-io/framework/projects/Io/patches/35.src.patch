diff --git a/src/java/org/apache/commons/io/FilenameUtils.java b/src/java/org/apache/commons/io/FilenameUtils.java
index d0fdae2b..c4a5a470 100644
--- a/src/java/org/apache/commons/io/FilenameUtils.java
+++ b/src/java/org/apache/commons/io/FilenameUtils.java
@@ -1146,6 +1146,8 @@ public class FilenameUtils {
         if (caseSensitivity == null) {
             caseSensitivity = IOCase.SENSITIVE;
         }
+        filename = caseSensitivity.convertCase(filename);
+        wildcardMatcher = caseSensitivity.convertCase(wildcardMatcher);
         String[] wcs = splitOnTokens(wildcardMatcher);
         boolean anyChars = false;
         int textIdx = 0;
@@ -1180,18 +1182,18 @@ public class FilenameUtils {
                     // matching text token
                     if (anyChars) {
                         // any chars then try to locate text token
-                        textIdx = caseSensitivity.checkIndexOf(filename, textIdx, wcs[wcsIdx]);
+                        textIdx = filename.indexOf(wcs[wcsIdx], textIdx);
                         if (textIdx == -1) {
                             // token not found
                             break;
                         }
-                        int repeat = caseSensitivity.checkIndexOf(filename, textIdx + 1, wcs[wcsIdx]);
+                        int repeat = filename.indexOf(wcs[wcsIdx], textIdx + 1);
                         if (repeat >= 0) {
                             backtrack.push(new int[] {wcsIdx, repeat});
                         }
                     } else {
                         // matching from current position
-                        if (!caseSensitivity.checkRegionMatches(filename, textIdx, wcs[wcsIdx])) {
+                        if (!filename.startsWith(wcs[wcsIdx], textIdx)) {
                             // couldnt match token
                             break;
                         }
diff --git a/src/java/org/apache/commons/io/IOCase.java b/src/java/org/apache/commons/io/IOCase.java
index fde1a358..658859e4 100644
--- a/src/java/org/apache/commons/io/IOCase.java
+++ b/src/java/org/apache/commons/io/IOCase.java
@@ -195,33 +195,6 @@ public final class IOCase implements Serializable {
         return str.regionMatches(!sensitive, str.length() - endLen, end, 0, endLen);
     }
 
-    /**
-     * Checks if one string contains another starting at a specific index using the
-     * case-sensitivity rule.
-     * <p>
-     * This method mimics parts of {@link String#indexOf(String, int)} 
-     * but takes case-sensitivity into account.
-     * 
-     * @param str  the string to check, not null
-     * @param strStartIndex  the index to start at in str
-     * @param search  the start to search for, not null
-     * @return the first index of the search String,
-     *  -1 if no match or <code>null</code> string input
-     * @throws NullPointerException if either string is null
-     * @since 2.0
-     */
-    public int checkIndexOf(String str, int strStartIndex, String search) {
-        int endIndex = str.length() - search.length();
-        if (endIndex >= strStartIndex) {
-            for (int i = strStartIndex; i <= endIndex; i++) {
-                if (checkRegionMatches(str, i, search)) {
-                    return i;
-                }
-            }
-        }
-        return -1;
-    }
-
     /**
      * Checks if one string contains another at a specific index using the case-sensitivity rule.
      * <p>
@@ -238,6 +211,20 @@ public final class IOCase implements Serializable {
         return str.regionMatches(!sensitive, strStartIndex, search, 0, search.length());
     }
 
+    /**
+     * Converts the case of the input String to a standard format.
+     * Subsequent operations can then use standard String methods.
+     * 
+     * @param str  the string to convert, null returns null
+     * @return the lower-case version if case-insensitive
+     */
+    String convertCase(String str) {
+        if (str == null) {
+            return null;
+        }
+        return sensitive ? str : str.toLowerCase();
+    }
+
     //-----------------------------------------------------------------------
     /**
      * Gets a string describing the sensitivity.
