diff --git a/src/test/java/org/apache/commons/io/input/AutoCloseInputStreamTest.java b/src/test/java/org/apache/commons/io/input/AutoCloseInputStreamTest.java
index 0d3c20b7..c067f6fe 100644
--- a/src/test/java/org/apache/commons/io/input/AutoCloseInputStreamTest.java
+++ b/src/test/java/org/apache/commons/io/input/AutoCloseInputStreamTest.java
@@ -40,7 +40,7 @@ public class AutoCloseInputStreamTest {
 
     @BeforeEach
     public void setUp() {
-        data = new byte[] {'x', 'y', 'z'};
+        data = new byte[] { 'x', 'y', 'z' };
         stream = new AutoCloseInputStream(new ByteArrayInputStream(data) {
             @Override
             public void close() {
@@ -57,6 +57,7 @@ public class AutoCloseInputStreamTest {
         assertEquals(-1, stream.read(), "read()");
     }
 
+
     @Test
     public void testRead() throws IOException {
         for (final byte element : data) {
@@ -99,26 +100,4 @@ public class AutoCloseInputStreamTest {
         assertEquals(-1, stream.read(b, 0, b.length), "read(b, off, len)");
     }
 
-    @Test
-    public void testResetBeforeEnd() throws IOException {
-        final String inputStr = "1234";
-        AutoCloseInputStream inputStream = new AutoCloseInputStream(new ByteArrayInputStream(inputStr.getBytes()));
-        inputStream.mark(1);
-        assertEquals('1', inputStream.read());
-        inputStream.reset();
-        assertEquals('1', inputStream.read());
-        assertEquals('2', inputStream.read());
-        inputStream.reset();
-        assertEquals('1', inputStream.read());
-        assertEquals('2', inputStream.read());
-        assertEquals('3', inputStream.read());
-        inputStream.reset();
-        assertEquals('1', inputStream.read());
-        assertEquals('2', inputStream.read());
-        assertEquals('3', inputStream.read());
-        assertEquals('4', inputStream.read());
-        inputStream.reset();
-        assertEquals('1', inputStream.read());
-    }
-
 }
