diff --git a/src/main/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java b/src/main/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java
index 300bd589..86630d1d 100644
--- a/src/main/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java
+++ b/src/main/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java
@@ -21,7 +21,6 @@ import java.io.InputStream;
 import java.io.ObjectInputStream;
 import java.io.ObjectStreamClass;
 import java.io.StreamCorruptedException;
-import java.lang.reflect.Proxy;
 
 /**
  * A special ObjectInputStream that loads a class based on a specified
@@ -76,27 +75,4 @@ public class ClassLoaderObjectInputStream extends ObjectInputStream {
             return super.resolveClass(objectStreamClass);
         }
     }
-
-    /**
-     * Create a proxy class that implements the specified interfaces using
-     * the specified ClassLoader or the super ClassLoader.
-     *
-     * @param interfaces the interfaces to implemnt
-     * @return the class
-     * @see java.io.ObjectInputStream#resolveProxyClass(java.lang.String[])
-     */
-    @Override
-    protected Class<?> resolveProxyClass(String[] interfaces) throws IOException,
-            ClassNotFoundException {
-        Class<?>[] interfaceClasses = new Class[interfaces.length];
-        for (int i = 0; i < interfaces.length; i++) {
-            interfaceClasses[i] = Class.forName(interfaces[i], false, classLoader);
-        }
-        try {
-            return Proxy.getProxyClass(classLoader, interfaceClasses);
-        } catch (IllegalArgumentException e) {
-            return super.resolveProxyClass(interfaces);
-        }
-    }
-    
 }
