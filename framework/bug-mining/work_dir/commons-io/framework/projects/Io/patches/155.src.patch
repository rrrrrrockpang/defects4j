diff --git a/src/main/java/org/apache/commons/io/FileUtils.java b/src/main/java/org/apache/commons/io/FileUtils.java
index 8b2ea2e6..ec2f994e 100644
--- a/src/main/java/org/apache/commons/io/FileUtils.java
+++ b/src/main/java/org/apache/commons/io/FileUtils.java
@@ -2519,7 +2519,7 @@ public class FileUtils {
         }
 
         if (file.isDirectory()) {
-            return sizeOfDirectory0(file); // private method; expects directory
+            return sizeOfDirectory(file);
         } else {
             return file.length();
         }
@@ -2566,6 +2566,7 @@ public class FileUtils {
      * overflow occurs. See {@link #sizeOfDirectoryAsBigInteger(File)} for an alternative
      * method that does not overflow.
      *
+     *
      * @param directory
      *            directory to inspect, must not be {@code null}
      * @return size of directory in bytes, 0 if directory is security restricted, a negative number when the real total
@@ -2575,11 +2576,7 @@ public class FileUtils {
      */
     public static long sizeOfDirectory(final File directory) {
         checkDirectory(directory);
-        return sizeOfDirectory0(directory);
-    }
 
-    // Private method, must be invoked will a directory parameter
-    private static long sizeOfDirectory0(final File directory) {
         final File[] files = directory.listFiles();
         if (files == null) {  // null if security restricted
             return 0L;
@@ -2589,7 +2586,7 @@ public class FileUtils {
         for (final File file : files) {
             try {
                 if (!isSymlink(file)) {
-                    size += sizeOf0(file); // internal method
+                    size += sizeOf(file);
                     if (size < 0) {
                         break;
                     }
@@ -2602,15 +2599,6 @@ public class FileUtils {
         return size;
     }
 
-    // Internal method - does not check existence
-    private static long sizeOf0(File file) {
-        if (file.isDirectory()) {
-            return sizeOfDirectory0(file);
-        } else {
-            return file.length(); // will be 0 if file does not exist
-        }
-    }
-
     /**
      * Counts the size of a directory recursively (sum of the length of all files).
      *
