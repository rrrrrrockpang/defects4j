diff --git a/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java b/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java
index 60df3ba5..3cb227b4 100644
--- a/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java
+++ b/src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java
@@ -18,7 +18,6 @@ package org.apache.commons.io.output;
 
 import static org.apache.commons.io.test.TestUtils.checkFile;
 import static org.junit.jupiter.api.Assertions.assertFalse;
-import static org.junit.jupiter.api.Assertions.assertEquals;
 import static org.junit.jupiter.api.Assertions.assertThrows;
 import static org.junit.jupiter.api.Assertions.assertTrue;
 import static org.junit.jupiter.api.Assertions.fail;
@@ -100,8 +99,10 @@ public class FileWriterWithEncodingTest {
     }
 
     private void successfulRun(final FileWriterWithEncoding fw21) throws Exception {
-        try (FileWriter fw1 = new FileWriter(file1); // default encoding
-            FileWriterWithEncoding fw2 = fw21) {
+        try (
+            FileWriter fw1 = new FileWriter(file1);  // default encoding
+            FileWriterWithEncoding fw2 = fw21
+        ){
             writeTestPayload(fw1, fw2);
             checkFile(file1, file2);
         }
@@ -112,8 +113,10 @@ public class FileWriterWithEncodingTest {
     @Test
     public void testDifferentEncoding() throws Exception {
         if (Charset.isSupported("UTF-16BE")) {
-            try (FileWriter fw1 = new FileWriter(file1); // default encoding
-                FileWriterWithEncoding fw2 = new FileWriterWithEncoding(file2, defaultEncoding)) {
+            try (
+                FileWriter fw1 = new FileWriter(file1);  // default encoding
+                FileWriterWithEncoding fw2 = new FileWriterWithEncoding(file2, defaultEncoding)
+            ){
                 writeTestPayload(fw1, fw2);
                 try {
                     checkFile(file1, file2);
@@ -127,8 +130,10 @@ public class FileWriterWithEncodingTest {
             assertTrue(file2.exists());
         }
         if (Charset.isSupported("UTF-16LE")) {
-            try (FileWriter fw1 = new FileWriter(file1); // default encoding
-                FileWriterWithEncoding fw2 = new FileWriterWithEncoding(file2, defaultEncoding)) {
+            try (
+                FileWriter fw1 = new FileWriter(file1);  // default encoding
+                FileWriterWithEncoding fw2 = new FileWriterWithEncoding(file2, defaultEncoding)
+            ){
                 writeTestPayload(fw1, fw2);
                 try {
                     checkFile(file1, file2);
@@ -165,40 +170,40 @@ public class FileWriterWithEncodingTest {
     @Test
     public void constructor_File_encoding_badEncoding() {
         assertThrows(IOException.class, () -> {
-            try (Writer writer = new FileWriterWithEncoding(file1, "BAD-ENCODE")) {
-                // empty
-            }
-        });
+            try (
+                Writer writer = new FileWriterWithEncoding(file1, "BAD-ENCODE")
+            ){ }
+         });
         assertFalse(file1.exists());
     }
 
     @Test
     public void constructor_File_directory() {
         assertThrows(IOException.class, () -> {
-            try (Writer writer = new FileWriterWithEncoding(temporaryFolder, defaultEncoding)) {
-                // empty
-            }
-        });
+            try (
+                Writer writer = new FileWriterWithEncoding(temporaryFolder, defaultEncoding)
+            ){ }
+         });
         assertFalse(file1.exists());
     }
 
     @Test
     public void constructor_File_nullFile() {
         assertThrows(NullPointerException.class, () -> {
-            try (Writer writer = new FileWriterWithEncoding((File) null, defaultEncoding)) {
-                // empty
-            }
-        });
+            try (
+                Writer writer = new FileWriterWithEncoding((File) null, defaultEncoding)
+            ){ }
+         });
         assertFalse(file1.exists());
     }
 
     @Test
     public void constructor_fileName_nullFile() {
         assertThrows(NullPointerException.class, () -> {
-            try (Writer writer = new FileWriterWithEncoding((String) null, defaultEncoding)) {
-                // empty
-            }
-        });
+            try (
+                Writer writer = new FileWriterWithEncoding((String) null, defaultEncoding)
+            ){ }
+         });
         assertFalse(file1.exists());
     }
 
@@ -208,22 +213,7 @@ public class FileWriterWithEncodingTest {
             successfulRun(new FileWriterWithEncoding(file2, (Charset) null));
             fail();
         } catch (final NullPointerException ignore) {
-            // empty
-        }
-    }
 
-    @Test
-    public void constructor_File_existingFile_withContent() throws Exception {
-        try (FileWriter fw1 = new FileWriter(file1);) {
-            fw1.write(textContent);
-            fw1.write(65);
         }
-        assertEquals(1025, file1.length());
-
-        try (FileWriterWithEncoding fw1 = new FileWriterWithEncoding(file1, defaultEncoding)) {
-            fw1.write("ABcd");
-        }
-
-        assertEquals(4, file1.length());
     }
 }
