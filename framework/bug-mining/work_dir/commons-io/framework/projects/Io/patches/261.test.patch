diff --git a/src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryBaseTestCase.java b/src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryBaseTestCase.java
index 86fb2137..c9e0cd25 100644
--- a/src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryBaseTestCase.java
+++ b/src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryBaseTestCase.java
@@ -128,29 +128,6 @@ public abstract class FileUtilsDeleteDirectoryBaseTestCase {
         assertFalse(symlinkFile.exists());
     }
 
-    @Test
-    public void testDeleteInvalidLinks() throws Exception {
-        final File aFile = new File(top, "realParentDirA");
-        assertTrue(aFile.mkdir());
-        final File bFile = new File(aFile, "realChildDirB");
-        assertTrue(bFile.mkdir());
-
-        final File cFile = new File(top, "realParentDirC");
-        assertTrue(cFile.mkdir());
-        final File dFile = new File(cFile, "realChildDirD");
-        assertTrue(dFile.mkdir());
-
-        final File linkToC = new File(bFile, "linkToC");
-        Files.createSymbolicLink(linkToC.toPath(), cFile.toPath());
-
-        final File linkToB = new File(dFile, "linkToB");
-        Files.createSymbolicLink(linkToB.toPath(), bFile.toPath());
-
-        FileUtils.deleteDirectory(aFile);
-        FileUtils.deleteDirectory(cFile);
-        assertEquals(0, top.list().length);
-    }
-
     @Test
     public void testDeleteParentSymlink() throws Exception {
         final File realParent = new File(top, "realparent");
@@ -217,6 +194,29 @@ public abstract class FileUtilsDeleteDirectoryBaseTestCase {
         assertEquals(1, randomDirectory.list().length, "Contents of sym link should not have been removed");
     }
 
+    @Test
+    public void testDeleteInvalidLinks() throws Exception {
+        File aFile = new File(top, "realParentDirA");
+        assertTrue(aFile.mkdir());
+        File bFile = new File(aFile, "realChildDirB");
+        assertTrue(bFile.mkdir());
+
+        File cFile = new File(top, "realParentDirC");
+        assertTrue(cFile.mkdir());
+        File dFile = new File(cFile, "realChildDirD");
+        assertTrue(dFile.mkdir());
+
+        File linkToC = new File(bFile, "linkToC");
+        Files.createSymbolicLink(linkToC.toPath(), cFile.toPath());
+
+        File linkToB = new File(dFile, "linkToB");
+        Files.createSymbolicLink(linkToB.toPath(), bFile.toPath());
+
+        FileUtils.deleteDirectory(aFile);
+        FileUtils.deleteDirectory(cFile);
+        assertEquals(0, top.list().length);
+    }
+
     @Test
     public void testDeletesNested() throws Exception {
         final File nested = new File(top, "nested");
