diff --git a/src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java b/src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java
index a9106d6a..480f4068 100644
--- a/src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java
+++ b/src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java
@@ -33,8 +33,8 @@ import java.util.List;
  * <pre>
  *       CompositeFileComparator comparator =
  *                       new CompositeFileComparator(
- *                                 (AbstractFileComparator) DirectoryFileComparator.DIRECTORY_COMPARATOR,
- *                                 (AbstractFileComparator) NameFileComparator.NAME_COMPARATOR);
+ *                                   DirectoryFileComparator.DIRECTORY_COMPARATOR,
+ *                                   NameFileComparator.NAME_COMPARATOR);
  *       List&lt;File&gt; list = ...
  *       comparator.sort(list);
  * </pre>
diff --git a/src/main/java/org/apache/commons/io/comparator/DefaultFileComparator.java b/src/main/java/org/apache/commons/io/comparator/DefaultFileComparator.java
index 50a259fc..1277a792 100644
--- a/src/main/java/org/apache/commons/io/comparator/DefaultFileComparator.java
+++ b/src/main/java/org/apache/commons/io/comparator/DefaultFileComparator.java
@@ -30,14 +30,14 @@ import java.util.Comparator;
  * {@link #DEFAULT_COMPARATOR} singleton instance:
  * <pre>
  *       List&lt;File&gt; list = ...
- *       ((AbstractFileComparator) DefaultFileComparator.DEFAULT_COMPARATOR).sort(list);
+ *       DefaultFileComparator.DEFAULT_COMPARATOR.sort(list);
  * </pre>
  * <p>
  * Example of doing a <i>reverse</i> sort of an array of files using the
  * {@link #DEFAULT_REVERSE} singleton instance:
  * <pre>
  *       File[] array = ...
- *       ((AbstractFileComparator) DefaultFileComparator.DEFAULT_REVERSE).sort(array);
+ *       DefaultFileComparator.DEFAULT_REVERSE.sort(array);
  * </pre>
  * <p>
  *
diff --git a/src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java b/src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java
index c17ab144..65eec10f 100644
--- a/src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java
+++ b/src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java
@@ -29,14 +29,14 @@ import java.util.Comparator;
  * {@link #DIRECTORY_COMPARATOR} singleton instance:
  * <pre>
  *       List&lt;File&gt; list = ...
- *       ((AbstractFileComparator) DirectoryFileComparator.DIRECTORY_COMPARATOR).sort(list);
+ *       DirectoryFileComparator.DIRECTORY_COMPARATOR.sort(list);
  * </pre>
  * <p>
  * Example of doing a <i>reverse</i> sort of an array of files/directories using the
  * {@link #DIRECTORY_REVERSE} singleton instance:
  * <pre>
  *       File[] array = ...
- *       ((AbstractFileComparator) DirectoryFileComparator.DIRECTORY_REVERSE).sort(array);
+ *       DirectoryFileComparator.DIRECTORY_REVERSE.sort(array);
  * </pre>
  * <p>
  *
diff --git a/src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java b/src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java
index 0d7480ad..d5fd3d7a 100644
--- a/src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java
+++ b/src/main/java/org/apache/commons/io/comparator/ExtensionFileComparator.java
@@ -37,14 +37,14 @@ import org.apache.commons.io.IOCase;
  * {@link #EXTENSION_COMPARATOR} singleton instance:
  * <pre>
  *       List&lt;File&gt; list = ...
- *       ((AbstractFileComparator) ExtensionFileComparator.EXTENSION_COMPARATOR).sort(list);
+ *       ExtensionFileComparator.EXTENSION_COMPARATOR.sort(list);
  * </pre>
  * <p>
  * Example of a <i>reverse case-insensitive</i> file extension sort using the
  * {@link #EXTENSION_INSENSITIVE_REVERSE} singleton instance:
  * <pre>
  *       File[] array = ...
- *       ((AbstractFileComparator) ExtensionFileComparator.EXTENSION_INSENSITIVE_REVERSE).sort(array);
+ *       ExtensionFileComparator.EXTENSION_INSENSITIVE_REVERSE.sort(array);
  * </pre>
  * <p>
  *
diff --git a/src/main/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java b/src/main/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java
index cb24e37f..230ef495 100644
--- a/src/main/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java
+++ b/src/main/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java
@@ -31,14 +31,14 @@ import java.util.Comparator;
  * {@link #LASTMODIFIED_COMPARATOR} singleton instance:
  * <pre>
  *       List&lt;File&gt; list = ...
- *       ((AbstractFileComparator) LastModifiedFileComparator.LASTMODIFIED_COMPARATOR).sort(list);
+ *       LastModifiedFileComparator.LASTMODIFIED_COMPARATOR.sort(list);
  * </pre>
  * <p>
  * Example of doing a <i>reverse</i> sort of an array of files using the
  * {@link #LASTMODIFIED_REVERSE} singleton instance:
  * <pre>
  *       File[] array = ...
- *       ((AbstractFileComparator) LastModifiedFileComparator.LASTMODIFIED_REVERSE).sort(array);
+ *       LastModifiedFileComparator.LASTMODIFIED_REVERSE.sort(array);
  * </pre>
  * <p>
  *
diff --git a/src/main/java/org/apache/commons/io/comparator/NameFileComparator.java b/src/main/java/org/apache/commons/io/comparator/NameFileComparator.java
index 46401f36..a0df96e7 100644
--- a/src/main/java/org/apache/commons/io/comparator/NameFileComparator.java
+++ b/src/main/java/org/apache/commons/io/comparator/NameFileComparator.java
@@ -35,14 +35,14 @@ import org.apache.commons.io.IOCase;
  * {@link #NAME_COMPARATOR} singleton instance:
  * <pre>
  *       List&lt;File&gt; list = ...
- *       ((AbstractFileComparator) NameFileComparator.NAME_COMPARATOR).sort(list);
+ *       NameFileComparator.NAME_COMPARATOR.sort(list);
  * </pre>
  * <p>
  * Example of a <i>reverse case-insensitive</i> file name sort using the
  * {@link #NAME_INSENSITIVE_REVERSE} singleton instance:
  * <pre>
  *       File[] array = ...
- *       ((AbstractFileComparator) NameFileComparator.NAME_INSENSITIVE_REVERSE).sort(array);
+ *       NameFileComparator.NAME_INSENSITIVE_REVERSE.sort(array);
  * </pre>
  * <p>
  *
diff --git a/src/main/java/org/apache/commons/io/comparator/PathFileComparator.java b/src/main/java/org/apache/commons/io/comparator/PathFileComparator.java
index 09e22755..590c11f6 100644
--- a/src/main/java/org/apache/commons/io/comparator/PathFileComparator.java
+++ b/src/main/java/org/apache/commons/io/comparator/PathFileComparator.java
@@ -35,14 +35,14 @@ import org.apache.commons.io.IOCase;
  * {@link #PATH_COMPARATOR} singleton instance:
  * <pre>
  *       List&lt;File&gt; list = ...
- *       ((AbstractFileComparator) PathFileComparator.PATH_COMPARATOR).sort(list);
+ *       PathFileComparator.PATH_COMPARATOR.sort(list);
  * </pre>
  * <p>
  * Example of a <i>reverse case-insensitive</i> file path sort using the
  * {@link #PATH_INSENSITIVE_REVERSE} singleton instance:
  * <pre>
  *       File[] array = ...
- *       ((AbstractFileComparator) PathFileComparator.PATH_INSENSITIVE_REVERSE).sort(array);
+ *       PathFileComparator.PATH_INSENSITIVE_REVERSE.sort(array);
  * </pre>
  * <p>
  *
diff --git a/src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java b/src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java
index acdb81ad..e3716158 100644
--- a/src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java
+++ b/src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java
@@ -33,14 +33,14 @@ import org.apache.commons.io.FileUtils;
  * {@link #SIZE_COMPARATOR} singleton instance:
  * <pre>
  *       List&lt;File&gt; list = ...
- *       ((AbstractFileComparator) SizeFileComparator.SIZE_COMPARATOR).sort(list);
+ *       SizeFileComparator.SIZE_COMPARATOR.sort(list);
  * </pre>
  * <p>
  * Example of doing a <i>reverse</i> sort of an array of files using the
  * {@link #SIZE_REVERSE} singleton instance:
  * <pre>
  *       File[] array = ...
- *       ((AbstractFileComparator) SizeFileComparator.SIZE_REVERSE).sort(array);
+ *       SizeFileComparator.SIZE_REVERSE.sort(array);
  * </pre>
  * <p>
  * <strong>N.B.</strong> Directories are treated as <b>zero size</b> unless
