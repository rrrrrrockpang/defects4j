diff --git a/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java b/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java
index ea38b508..234c25e4 100644
--- a/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java
+++ b/src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java
@@ -35,8 +35,6 @@ import org.junit.Rule;
 import org.junit.Test;
 import org.junit.rules.TemporaryFolder;
 
-import org.junit.Assert;
-
 /**
  * This is used to test FilenameUtils for correctness.
  *
@@ -582,20 +580,6 @@ public class FilenameUtilsTestCase {
         assertEquals(-1, FilenameUtils.indexOfExtension("a\\b\\c"));
         assertEquals(-1, FilenameUtils.indexOfExtension("a/b.notextension/c"));
         assertEquals(-1, FilenameUtils.indexOfExtension("a\\b.notextension\\c"));
-
-        if (FilenameUtils.isSystemWindows()) {
-            // Special case handling for NTFS ADS names
-        	try {
-        		FilenameUtils.indexOfExtension("foo.exe:bar.txt");
-        		throw new AssertionError("Expected Exception");
-        	} catch (IllegalArgumentException e) {
-        		assertEquals("NTFS ADS separator (':') in filename is forbidden.", e.getMessage());
-        	}
-        } else {
-        	// Upwards compatibility on other systems
-        	assertEquals(11, FilenameUtils.indexOfExtension("foo.exe:bar.txt"));
-        }
-
     }
 
     //-----------------------------------------------------------------------
@@ -878,19 +862,6 @@ public class FilenameUtilsTestCase {
         assertEquals("", FilenameUtils.getExtension("a\\b\\c"));
         assertEquals("", FilenameUtils.getExtension("C:\\temp\\foo.bar\\README"));
         assertEquals("ext", FilenameUtils.getExtension("../filename.ext"));
-
-        if (FilenameUtils.isSystemWindows()) {
-            // Special case handling for NTFS ADS names
-        	try {
-        		FilenameUtils.getExtension("foo.exe:bar.txt");
-        		throw new AssertionError("Expected Exception");
-        	} catch (IllegalArgumentException e) {
-        		assertEquals("NTFS ADS separator (':') in filename is forbidden.", e.getMessage());
-        	}
-        } else {
-        	// Upwards compatibility:
-        	assertEquals("txt", FilenameUtils.getExtension("foo.exe:bar.txt"));
-        }
     }
 
     @Test
@@ -1111,4 +1082,5 @@ public class FilenameUtilsTestCase {
         assertFalse(FilenameUtils.isExtension("a.b\\file.txt", new ArrayList<>(Arrays.asList(new String[]{"TXT"}))));
         assertFalse(FilenameUtils.isExtension("a.b\\file.txt", new ArrayList<>(Arrays.asList(new String[]{"TXT", "RTF"}))));
     }
+
 }
